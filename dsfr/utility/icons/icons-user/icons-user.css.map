{"version":3,"sources":["<no source>","%3Cinput%20css%20_FMw4w%3E","file:///Users/ket/Documents/work/dsfr/src/dsfr/utility/icons/icons-user/main.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/selector/tool/_pseudo.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/display/tool/_mask-image.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/icon/tool/_default.scss","file:///Users/ket/Documents/work/dsfr/src/module/media-query/mixin/_respond-from.scss","file:///Users/ket/Documents/work/dsfr/src/module/shame/media-query/mixin/_order.scss","file:///Users/ket/Documents/work/dsfr/src/module/legacy/mixin/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/icon/tool/_legacy.scss"],"names":[],"mappings":"AAAA;;GAAA;ACAA,gBAAgB;;ACKhB;;cAAA;ACWE;;ECVA,sEC2CM;ED1CN,8DC0CM;AJ9BR;;AEHE;;ECVA,sEC2CM;ED1CN,8DC0CM;AJzBR;;AERE;;ECVA,0EC2CM;ED1CN,kEC0CM;AJpBR;;AEbE;;ECVA,0EC2CM;ED1CN,kEC0CM;AJfR;;AElBE;;ECVA,6DC2CM;ED1CN,qDC0CM;AJVR;;AEvBE;;ECVA,6DC2CM;ED1CN,qDC0CM;AJLR;;AE5BE;;ECVA,6DC2CM;ED1CN,qDC0CM;AJAR;;AEjCE;;ECVA,6DC2CM;ED1CN,qDC0CM;AJKR;;AEtCE;;ECVA,8DC2CM;ED1CN,sDC0CM;AJUR;;AE3CE;;ECVA,8DC2CM;ED1CN,sDC0CM;AJeR;;AEhDE;;ECVA,4DC2CM;ED1CN,oDC0CM;AJoBR;;AErDE;;ECVA,4DC2CM;ED1CN,oDC0CM;AJyBR;;AE1DE;;ECVA,gEC2CM;ED1CN,wDC0CM;AJ8BR;;AE/DE;;ECVA,gEC2CM;ED1CN,wDC0CM;AJmCR;;AEpEE;;ECVA,4DC2CM;ED1CN,oDC0CM;AJwCR;;AEzEE;;ECVA,kEC2CM;ED1CN,0DC0CM;AJ6CR;;AE9EE;;ECVA,kEC2CM;ED1CN,0DC0CM;AJkDR;;AEnFE;;ECVA,4DC2CM;ED1CN,oDC0CM;AJuDR;;AExFE;;ECVA,mEC2CM;ED1CN,2DC0CM;AJ4DR;;AE7FE;;ECVA,mEC2CM;ED1CN,2DC0CM;AJiER;;AElGE;;ECVA,oEC2CM;ED1CN,4DC0CM;AJsER;;AEvGE;;ECVA,oEC2CM;ED1CN,4DC0CM;AJ2ER;;AE5GE;;ECVA,iEC2CM;ED1CN,yDC0CM;AJgFR;;AEjHE;;ECVA,iEC2CM;ED1CN,yDC0CM;AJqFR;;AEtHE;;ECVA,4DC2CM;ED1CN,oDC0CM;AJ0FR;;AE3HE;;ECVA,4DC2CM;ED1CN,oDC0CM;AJ+FR;;AEhIE;;ECVA,sEC2CM;ED1CN,8DC0CM;AJoGR;;AErIE;;ECVA,sEC2CM;ED1CN,8DC0CM;AJyGR;;AE1IE;;ECVA,sEC2CM;ED1CN,8DC0CM;AJ8GR;;AE/IE;;ECVA,sEC2CM;ED1CN,8DC0CM;AJmHR;;AKrJI;ECRI,cAAA;;EAAA,cAAA;ANDR;;AKSI;ECRI,cAAA;;EAAA,cAAA;ANER;;AKMI;ECRI,cAAA;;EAAA,cAAA;ANKR;;AKGI;ECRI,cAAA;;EAAA,cAAA;ANQR;;AONI;ELOF;;IMAE,oEAFI;ERuKN;;EErKA;;IMAE,oEAFI;ER0KN;;EExKA;;IMAE,wEAFI;ER6KN;;EE3KA;;IMAE,wEAFI;ERgLN;;EE9KA;;IMAE,2DAFI;ERmLN;;EEjLA;;IMAE,2DAFI;ERsLN;;EEpLA;;IMAE,2DAFI;ERyLN;;EEvLA;;IMAE,2DAFI;ER4LN;;EE1LA;;IMAE,4DAFI;ER+LN;;EE7LA;;IMAE,4DAFI;ERkMN;;EEhMA;;IMAE,0DAFI;ERqMN;;EEnMA;;IMAE,0DAFI;ERwMN;;EEtMA;;IMAE,8DAFI;ER2MN;;EEzMA;;IMAE,8DAFI;ER8MN;;EE5MA;;IMAE,0DAFI;ERiNN;;EE/MA;;IMAE,gEAFI;ERoNN;;EElNA;;IMAE,gEAFI;ERuNN;;EErNA;;IMAE,0DAFI;ER0NN;;EExNA;;IMAE,iEAFI;ER6NN;;EE3NA;;IMAE,iEAFI;ERgON;;EE9NA;;IMAE,kEAFI;ERmON;;EEjOA;;IMAE,kEAFI;ERsON;;EEpOA;;IMAE,+DAFI;ERyON;;EEvOA;;IMAE,+DAFI;ER4ON;;EE1OA;IMAE,0DAFI;ERiPN;;EE/OA;IMAE,0DAFI;ERoPN;;EElPA;;IMAE,oEAFI;ERuPN;;EErPA;;IMAE,oEAFI;ER0PN;;EExPA;;IMAE,oEAFI;ER6PN;;EE3PA;;IMAE,oEAFI;ERgQN;AAnBF","file":"icons-user.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  ICON COMMUNICATION\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n.fr-icon-account-circle-fill::before, .fr-icon-account-circle-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/account-circle-fill.svg\");\n  mask-image: url(\"../../../icons/user/account-circle-fill.svg\");\n}\n\n.fr-icon-account-circle-line::before, .fr-icon-account-circle-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/account-circle-line.svg\");\n  mask-image: url(\"../../../icons/user/account-circle-line.svg\");\n}\n\n.fr-icon-account-pin-circle-fill::before, .fr-icon-account-pin-circle-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/account-pin-circle-fill.svg\");\n  mask-image: url(\"../../../icons/user/account-pin-circle-fill.svg\");\n}\n\n.fr-icon-account-pin-circle-line::before, .fr-icon-account-pin-circle-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/account-pin-circle-line.svg\");\n  mask-image: url(\"../../../icons/user/account-pin-circle-line.svg\");\n}\n\n.fr-icon-admin-fill::before, .fr-icon-admin-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/admin-fill.svg\");\n  mask-image: url(\"../../../icons/user/admin-fill.svg\");\n}\n\n.fr-icon-admin-line::before, .fr-icon-admin-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/admin-line.svg\");\n  mask-image: url(\"../../../icons/user/admin-line.svg\");\n}\n\n.fr-icon-group-fill::before, .fr-icon-group-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/group-fill.svg\");\n  mask-image: url(\"../../../icons/user/group-fill.svg\");\n}\n\n.fr-icon-group-line::before, .fr-icon-group-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/group-line.svg\");\n  mask-image: url(\"../../../icons/user/group-line.svg\");\n}\n\n.fr-icon-parent-fill::before, .fr-icon-parent-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/parent-fill.svg\");\n  mask-image: url(\"../../../icons/user/parent-fill.svg\");\n}\n\n.fr-icon-parent-line::before, .fr-icon-parent-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/parent-line.svg\");\n  mask-image: url(\"../../../icons/user/parent-line.svg\");\n}\n\n.fr-icon-team-fill::before, .fr-icon-team-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/team-fill.svg\");\n  mask-image: url(\"../../../icons/user/team-fill.svg\");\n}\n\n.fr-icon-team-line::before, .fr-icon-team-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/team-line.svg\");\n  mask-image: url(\"../../../icons/user/team-line.svg\");\n}\n\n.fr-icon-user-add-fill::before, .fr-icon-user-add-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-add-fill.svg\");\n  mask-image: url(\"../../../icons/user/user-add-fill.svg\");\n}\n\n.fr-icon-user-add-line::before, .fr-icon-user-add-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-add-line.svg\");\n  mask-image: url(\"../../../icons/user/user-add-line.svg\");\n}\n\n.fr-icon-user-fill::before, .fr-icon-user-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-fill.svg\");\n  mask-image: url(\"../../../icons/user/user-fill.svg\");\n}\n\n.fr-icon-user-heart-fill::before, .fr-icon-user-heart-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-heart-fill.svg\");\n  mask-image: url(\"../../../icons/user/user-heart-fill.svg\");\n}\n\n.fr-icon-user-heart-line::before, .fr-icon-user-heart-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-heart-line.svg\");\n  mask-image: url(\"../../../icons/user/user-heart-line.svg\");\n}\n\n.fr-icon-user-line::before, .fr-icon-user-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-line.svg\");\n  mask-image: url(\"../../../icons/user/user-line.svg\");\n}\n\n.fr-icon-user-search-fill::before, .fr-icon-user-search-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-search-fill.svg\");\n  mask-image: url(\"../../../icons/user/user-search-fill.svg\");\n}\n\n.fr-icon-user-search-line::before, .fr-icon-user-search-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-search-line.svg\");\n  mask-image: url(\"../../../icons/user/user-search-line.svg\");\n}\n\n.fr-icon-user-setting-fill::before, .fr-icon-user-setting-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-setting-fill.svg\");\n  mask-image: url(\"../../../icons/user/user-setting-fill.svg\");\n}\n\n.fr-icon-user-setting-line::before, .fr-icon-user-setting-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-setting-line.svg\");\n  mask-image: url(\"../../../icons/user/user-setting-line.svg\");\n}\n\n.fr-icon-user-star-fill::before, .fr-icon-user-star-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-star-fill.svg\");\n  mask-image: url(\"../../../icons/user/user-star-fill.svg\");\n}\n\n.fr-icon-user-star-line::before, .fr-icon-user-star-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-star-line.svg\");\n  mask-image: url(\"../../../icons/user/user-star-line.svg\");\n}\n\n.fr-fi-user-fill::before, .fr-fi-user-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-fill.svg\");\n  mask-image: url(\"../../../icons/user/user-fill.svg\");\n}\n\n.fr-fi-user-line::before, .fr-fi-user-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/user-line.svg\");\n  mask-image: url(\"../../../icons/user/user-line.svg\");\n}\n\n.fr-fi-account-line::before, .fr-fi-account-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/account-circle-line.svg\");\n  mask-image: url(\"../../../icons/user/account-circle-line.svg\");\n}\n\n.fr-fi-account-fill::before, .fr-fi-account-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/account-circle-fill.svg\");\n  mask-image: url(\"../../../icons/user/account-circle-fill.svg\");\n}\n\n.fr-icon-account-line::before, .fr-icon-account-line::after {\n  -webkit-mask-image: url(\"../../../icons/user/account-circle-line.svg\");\n  mask-image: url(\"../../../icons/user/account-circle-line.svg\");\n}\n\n.fr-icon-account-fill::before, .fr-icon-account-fill::after {\n  -webkit-mask-image: url(\"../../../icons/user/account-circle-fill.svg\");\n  mask-image: url(\"../../../icons/user/account-circle-fill.svg\");\n}\n\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-icon-account-circle-fill::before, .fr-icon-account-circle-fill::after {\n    background-image: url(\"../../../icons/user/account-circle-fill.svg\");\n  }\n  .fr-icon-account-circle-line::before, .fr-icon-account-circle-line::after {\n    background-image: url(\"../../../icons/user/account-circle-line.svg\");\n  }\n  .fr-icon-account-pin-circle-fill::before, .fr-icon-account-pin-circle-fill::after {\n    background-image: url(\"../../../icons/user/account-pin-circle-fill.svg\");\n  }\n  .fr-icon-account-pin-circle-line::before, .fr-icon-account-pin-circle-line::after {\n    background-image: url(\"../../../icons/user/account-pin-circle-line.svg\");\n  }\n  .fr-icon-admin-fill::before, .fr-icon-admin-fill::after {\n    background-image: url(\"../../../icons/user/admin-fill.svg\");\n  }\n  .fr-icon-admin-line::before, .fr-icon-admin-line::after {\n    background-image: url(\"../../../icons/user/admin-line.svg\");\n  }\n  .fr-icon-group-fill::before, .fr-icon-group-fill::after {\n    background-image: url(\"../../../icons/user/group-fill.svg\");\n  }\n  .fr-icon-group-line::before, .fr-icon-group-line::after {\n    background-image: url(\"../../../icons/user/group-line.svg\");\n  }\n  .fr-icon-parent-fill::before, .fr-icon-parent-fill::after {\n    background-image: url(\"../../../icons/user/parent-fill.svg\");\n  }\n  .fr-icon-parent-line::before, .fr-icon-parent-line::after {\n    background-image: url(\"../../../icons/user/parent-line.svg\");\n  }\n  .fr-icon-team-fill::before, .fr-icon-team-fill::after {\n    background-image: url(\"../../../icons/user/team-fill.svg\");\n  }\n  .fr-icon-team-line::before, .fr-icon-team-line::after {\n    background-image: url(\"../../../icons/user/team-line.svg\");\n  }\n  .fr-icon-user-add-fill::before, .fr-icon-user-add-fill::after {\n    background-image: url(\"../../../icons/user/user-add-fill.svg\");\n  }\n  .fr-icon-user-add-line::before, .fr-icon-user-add-line::after {\n    background-image: url(\"../../../icons/user/user-add-line.svg\");\n  }\n  .fr-icon-user-fill::before, .fr-icon-user-fill::after {\n    background-image: url(\"../../../icons/user/user-fill.svg\");\n  }\n  .fr-icon-user-heart-fill::before, .fr-icon-user-heart-fill::after {\n    background-image: url(\"../../../icons/user/user-heart-fill.svg\");\n  }\n  .fr-icon-user-heart-line::before, .fr-icon-user-heart-line::after {\n    background-image: url(\"../../../icons/user/user-heart-line.svg\");\n  }\n  .fr-icon-user-line::before, .fr-icon-user-line::after {\n    background-image: url(\"../../../icons/user/user-line.svg\");\n  }\n  .fr-icon-user-search-fill::before, .fr-icon-user-search-fill::after {\n    background-image: url(\"../../../icons/user/user-search-fill.svg\");\n  }\n  .fr-icon-user-search-line::before, .fr-icon-user-search-line::after {\n    background-image: url(\"../../../icons/user/user-search-line.svg\");\n  }\n  .fr-icon-user-setting-fill::before, .fr-icon-user-setting-fill::after {\n    background-image: url(\"../../../icons/user/user-setting-fill.svg\");\n  }\n  .fr-icon-user-setting-line::before, .fr-icon-user-setting-line::after {\n    background-image: url(\"../../../icons/user/user-setting-line.svg\");\n  }\n  .fr-icon-user-star-fill::before, .fr-icon-user-star-fill::after {\n    background-image: url(\"../../../icons/user/user-star-fill.svg\");\n  }\n  .fr-icon-user-star-line::before, .fr-icon-user-star-line::after {\n    background-image: url(\"../../../icons/user/user-star-line.svg\");\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fi-user-fill::before {\n    background-image: url(\"../../../icons/user/user-fill.svg\");\n  }\n  .fr-fi-user-line::before {\n    background-image: url(\"../../../icons/user/user-line.svg\");\n  }\n  .fr-fi-account-line::before, .fr-fi-account-line::after {\n    background-image: url(\"../../../icons/user/account-circle-line.svg\");\n  }\n  .fr-fi-account-fill::before, .fr-fi-account-fill::after {\n    background-image: url(\"../../../icons/user/account-circle-fill.svg\");\n  }\n  .fr-icon-account-line::before, .fr-icon-account-line::after {\n    background-image: url(\"../../../icons/user/account-circle-line.svg\");\n  }\n  .fr-icon-account-fill::before, .fr-icon-account-fill::after {\n    background-image: url(\"../../../icons/user/account-circle-fill.svg\");\n  }\n}","////\n/// Icon User Main\n/// @group icons-user\n////\n\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  ICON COMMUNICATION\n\\* ˍˍˍˍˍˍˍˍˍ */\n\n@use 'src/module/path';\n@use 'src/module/shame/media-query';\n\n@include path.to-dist(3);\n@include media-query.order;\n\n@import 'index';\n@import 'style/module';\n\n// deprecated\n@import 'deprecated/style/setting';\n@import 'deprecated/style/module';\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : mask-image\n/// @group core\n////\n\n@mixin mask-image($value) {\n  -webkit-mask-image: $value;\n  mask-image: $value;\n}\n\n@mixin mask-image-size($value) {\n  -webkit-mask-size: $value;\n  mask-size: $value;\n}\n\n@mixin mask-image-position($value) {\n  -webkit-mask-position: $value;\n  mask-position: $value;\n}\n\n@mixin mask-image-repeat($value) {\n  -webkit-mask-repeat: $value;\n  mask-repeat: $value;\n}\n","////\n/// Core Tool : Icon default\n/// @group core\n////\n\n@use 'src/module/path';\n@use 'src/module/spacing';\n@use 'src/module/specificity';\n@use 'src/module/preference';\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return spacing.space(map-get($icon-size-map, $size));\n}\n\n@function get-icon-url($icon, $important: false) {\n  $config: map-get($icons-config, $icon);\n  $url: url('#{path.dist()}#{map-get($config, path)}');\n  @return specificity.important($url, $important);\n}\n\n@function get-icon-pseudo($restrain) {\n  @if $restrain == before or $restrain == after {\n    @return $restrain;\n  }\n  @return before after;\n}\n\n@mixin _icon-pseudo ($restrain: null) {\n  @include _pseudo(get-icon-pseudo($restrain)) {\n    @content;\n  }\n}\n\n@mixin icon-size ($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    --icon-size: #{icon-size($size)};\n    @content;\n  }\n}\n\n@mixin icon-image ($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n\n  @include _icon-pseudo($restrain) {\n    @include mask-image($url);\n  }\n}\n\n@mixin icon-style($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    flex: 0 0 auto;\n    display: inline-block;\n    vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n    background-color: currentColor;\n    @include size(var(--icon-size), var(--icon-size));\n    @include mask-image-size(100% 100%);\n    @content;\n  }\n}\n\n@mixin icon-content($is-before: true, $override: false) {\n  $pseudos: before after;\n  @if not $is-before {\n    $pseudos: after before;\n  }\n  @include _pseudo(nth($pseudos, 1), '') {\n    @content;\n  }\n  @if $override {\n    @include _pseudo(nth($pseudos, 2), none);\n  }\n}\n\n@mixin icon($icon: null, $size: md, $restrain: null, $styling: true, $is-before: $restrain != after, $override: false) {\n  @if $styling {\n    @include icon-style($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size($size, $restrain);\n  }\n\n  @if $is-before != null {\n    @include icon-content($is-before, $override) {\n      @content;\n    }\n  }\n}\n\n@mixin icon-forced-color($color: graytext, $adjust: false, $restrain: before after) {\n  @include _pseudo($restrain) {\n    @include preference.forced-colors {\n      @if $adjust == true {\n        forced-color-adjust: none;\n      }\n      background-color: $color;\n    }\n  }\n}\n\n@function filter-icons($category, $config: $icons-config) {\n  $filtered: ();\n  @each $icon, $setting in $config {\n    @if map-get($setting, category) == $category {\n      $filtered: map-merge($filtered, (#{$icon}: $setting));\n    }\n  }\n  @return $filtered;\n}\n\n@mixin generate-icons($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image($icon);\n    }\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'src/module/media-query/variable/breakpoints';\n@use 'src/module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media screen and (min-width: 0\\0) and (min-resolution: +72dpi) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n"]}