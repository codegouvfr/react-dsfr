{"version":3,"sources":["<no source>","%3Cinput%20css%2060Vt2i%3E","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/main.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/style/module/_default.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/action/tool/_link.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/typography/tool/_list.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/typography/tool/_styles.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/spacing/tool/_size.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/spacing/tool/_position.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/display/tool/_display.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/spacing/tool/_space.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/style/module/_brand.scss","file:///Users/ket/Documents/work/dsfr/src/module/elevation/mixin/_z-index.scss","file:///Users/ket/Documents/work/dsfr/src/module/color/mixin/_element.scss","file:///Users/ket/Documents/work/dsfr/src/module/elevation/mixin/_shadow.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/selector/tool/_pseudo.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/spacing/tool/_z-index.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/logo/style/_tool.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/style/module/_modal.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/style/module/_navbar.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/selector/tool/_nest.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/link/style/tool/_size.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/link/style/tool/_icon.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/icon/tool/_default.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/display/tool/_mask-image.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/style/module/_links.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/selector/tool/_pattern.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/deprecated/style/_module.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/button/style/tool/_group.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/action/tool/_hover.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/style/_scheme.scss","file:///Users/ket/Documents/work/dsfr/src/module/disabled/mixin/_selector.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/selector/tool/_block.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/deprecated/style/_scheme.scss","file:///Users/ket/Documents/work/dsfr/src/module/media-query/mixin/_respond-from.scss","file:///Users/ket/Documents/work/dsfr/src/module/shame/media-query/mixin/_order.scss","file:///Users/ket/Documents/work/dsfr/src/module/elevation/mixin/_drop.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/style/module/_tools.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/header/style/module/_nav.scss","file:///Users/ket/Documents/work/dsfr/src/module/preference/mixin/_forced-colors.scss"],"names":[],"mappings":"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","file":"header.main.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  HEADER\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n.fr-header {\n  --underline-img: none;\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n  --text-spacing: 0;\n  --title-spacing: 0;\n  width: 100%;\n  position: relative;\n}\n.fr-header__body-row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  margin: 0 -1rem;\n}\n@media (min-width: 62em) {\n  .fr-header__body-row {\n    padding: 1.5rem 0;\n  }\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-header {\n    outline: 1px solid;\n  }\n}\n@media (-ms-high-contrast: active) and (min-width: 62em), (forced-colors: active) and (min-width: 62em) {\n  .fr-header {\n    outline: none;\n  }\n}\n\n.fr-header__brand {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n  padding-left: 0.25rem;\n  padding-right: 0.25rem;\n}\n@media (min-width: 62em) {\n  .fr-header__brand {\n    margin-top: -1rem;\n    margin-bottom: -1rem;\n  }\n}\n.fr-header__brand::after {\n  content: \"\";\n  display: block;\n  position: relative;\n  z-index: 1;\n  flex: 1;\n  align-self: stretch;\n}\n@media (min-width: 62em) {\n  .fr-header__brand {\n    flex-wrap: nowrap;\n    width: auto;\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n.fr-header__brand-top {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  overflow: hidden;\n}\n@media (min-width: 62em) {\n  .fr-header__brand-top {\n    width: auto;\n  }\n}\n@media (hover: hover) and (pointer: fine) {\n  .fr-header__brand.fr-enlarge-link a[href]:hover {\n    --a: 0.1;\n  }\n  .fr-header__brand.fr-enlarge-link a[href]:active {\n    --a: 0.2;\n  }\n}\n.fr-header__brand.fr-enlarge-link a[href]::before {\n  outline-offset: -2px;\n}\n@media (min-width: 62em) {\n  .fr-header__brand.fr-enlarge-link a[href]::before {\n    outline-offset: 2px;\n  }\n}\n@media (min-width: 62em) {\n  .fr-header__logo, .fr-header__operator, .fr-header__service {\n    padding: 1rem;\n  }\n}\n.fr-header__logo {\n  order: 1;\n  flex: 0 0 auto;\n  padding: 0.75rem;\n}\n.fr-header__logo .fr-logo {\n  font-size: 0.7875rem;\n  padding: 0.75rem;\n  margin: -0.75rem;\n}\n.fr-header__logo .fr-logo::before {\n  width: 2.0625rem;\n  height: 0.75rem;\n  margin-bottom: 0.25rem;\n  background-size: 2.0625rem 0.84375rem, 2.0625rem 0.75rem, 0;\n  background-position: 0 -0.046875rem, 0 0, 0 0;\n}\n:root[data-fr-mourning] .fr-header__logo .fr-logo::before {\n  background-size: 2.0625rem 0.84375rem, 0, 2.0625rem 0.75rem;\n}\n\n.fr-header__logo .fr-logo::after {\n  min-width: 1.96875rem;\n  background-size: 3.9375rem 2.8125rem;\n  background-position: 0 calc(100% + 1.40625rem);\n  padding-top: 1.65625rem;\n}\n[data-fr-theme=dark] .fr-header__logo .fr-logo::after {\n  background-position: -1.96875rem 100%;\n}\n\n@media (prefers-color-scheme: dark) and (forced-colors: active) {\n  .fr-header__logo .fr-logo::after {\n    background-position: -1.96875rem 100%;\n  }\n  [data-fr-theme=dark] .fr-header__logo .fr-logo::after {\n    background-position: -1.96875rem 100%;\n  }\n}\n@media (prefers-color-scheme: light) and (forced-colors: active) {\n  .fr-header__logo .fr-logo::after {\n    background-position: 0 calc(100% + 1.40625rem);\n  }\n  [data-fr-theme=dark] .fr-header__logo .fr-logo::after {\n    background-position: 0 calc(100% + 1.40625rem);\n  }\n}\n.fr-header__operator {\n  padding: 0.75rem;\n  order: 2;\n  flex: 0 1 auto;\n}\n.fr-header__operator img {\n  display: block;\n  min-width: 3.5rem;\n}\n.fr-header__service {\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  margin-left: 0.75rem;\n  margin-right: 0.75rem;\n  --external-link-content: none;\n}\n@media (min-width: 62em) {\n  .fr-header__service {\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n.fr-header__service::before {\n  content: \"\";\n  display: block;\n  width: calc(100% - 2rem);\n  height: 1px;\n  position: absolute;\n  transform: translateY(-0.75rem);\n}\n@media (min-width: 62em) {\n  .fr-header__service::before {\n    content: none;\n  }\n}\n.fr-header__service-title {\n  font-weight: 700;\n  font-size: 1.125rem;\n  line-height: 1.5rem;\n}\n@media (min-width: 48em) {\n  .fr-header__service-title {\n    font-size: 1.25rem;\n    line-height: 1.75rem;\n  }\n}\n.fr-header__service-title .fr-badge {\n  vertical-align: middle;\n  margin: -0.25rem 0 0 0.25rem;\n}\n.fr-header__service-tagline {\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n}\n\n.fr-header .fr-modal {\n  overflow: auto;\n  justify-content: initial;\n}\n.fr-header .fr-modal:not([role=dialog]) {\n  transition: none;\n}\n.fr-header .fr-modal::before {\n  content: none;\n}\n.fr-header .fr-modal::after {\n  content: none;\n}\n@media (min-width: 62em) {\n  .fr-header .fr-modal {\n    margin: 0;\n    width: auto;\n    height: auto;\n    visibility: inherit;\n    opacity: 1;\n    position: initial;\n    background-color: transparent;\n    overflow: initial;\n  }\n}\n.fr-header .fr-modal > * > .fr-btn--close {\n  margin-bottom: 1.5rem;\n}\n@media (min-width: 62em) {\n  .fr-header .fr-modal > * > .fr-btn--close {\n    display: none;\n  }\n}\n.fr-header .fr-modal > .fr-container {\n  pointer-events: all;\n  padding-top: 1rem;\n  padding-bottom: 4.5rem;\n  height: 100%;\n  overflow: inherit;\n}\n@media (min-width: 62em) {\n  .fr-header .fr-modal > .fr-container {\n    padding-top: 0;\n    padding-bottom: 0;\n    height: auto;\n  }\n}\n\n.fr-header__navbar {\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-end;\n  padding: 0.25rem;\n  margin-right: -0.5rem;\n  margin-top: 0.25rem;\n  order: 3;\n  flex: 1;\n  align-self: stretch;\n  z-index: calc(var(--ground) + 1000);\n}\n@media (min-width: 62em) {\n  .fr-header__navbar {\n    display: none;\n  }\n}\n.fr-header__navbar .fr-btn {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1rem;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  flex: 0 0 auto;\n  white-space: nowrap;\n}\n.fr-header__navbar .fr-btn::before {\n  --icon-size: 1.5rem;\n  margin-left: 0;\n  margin-right: 0.5rem;\n}\n.fr-header__navbar .fr-btn--menu::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-header__navbar .fr-btn--menu::before {\n  -webkit-mask-image: url(\"../../icons/system/menu-fill.svg\");\n  mask-image: url(\"../../icons/system/menu-fill.svg\");\n}\n.fr-header__navbar .fr-btn--menu::before {\n  content: \"\";\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-header__navbar .fr-btn--menu::before {\n    forced-color-adjust: none;\n    background-color: buttontext;\n  }\n}\n.fr-header__navbar .fr-btn--search::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-header__navbar .fr-btn--search::before {\n  -webkit-mask-image: url(\"../../icons/system/search-line.svg\");\n  mask-image: url(\"../../icons/system/search-line.svg\");\n}\n.fr-header__navbar .fr-btn--search::before {\n  content: \"\";\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-header__navbar .fr-btn--search::before {\n    forced-color-adjust: none;\n    background-color: buttontext;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-header__tools {\n    flex-direction: column;\n    align-items: flex-end;\n    text-align: right;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    margin-left: auto;\n    flex: 1 0 auto;\n  }\n  .fr-header__tools-links + .fr-header__search {\n    margin-top: 1rem;\n  }\n}\n@media (min-width: 62em) {\n  .fr-header__tools .fr-header__search {\n    max-width: 24rem;\n    margin-left: auto;\n  }\n}\n\n.fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn {\n  justify-content: flex-start;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1rem;\n  overflow: initial;\n  max-width: 100%;\n  max-height: none;\n}\n.fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn::before {\n  --icon-size: 1rem;\n  margin-left: -0.125rem;\n  margin-right: 0.5rem;\n}\n@media (min-width: 62em) {\n  .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-], .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"], .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-], .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"] {\n    font-size: 0.875rem;\n    line-height: 1.5rem;\n    min-height: 2rem;\n    padding: 0.25rem 0.75rem;\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n  }\n  .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::before, .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::before, .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::before, .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::before {\n    --icon-size: 1rem;\n    margin-left: -0.125rem;\n    margin-right: 0.5rem;\n  }\n  .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"]) {\n    font-size: 0.875rem;\n    line-height: 1.5rem;\n    min-height: 2rem;\n    padding: 0.25rem 0.75rem;\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n  }\n  .fr-header .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n    --icon-size: 1rem;\n    margin-left: -0.125rem;\n    margin-right: 0.5rem;\n  }\n}\n\n.fr-header__tools-links {\n  display: none;\n}\n@media (min-width: 62em) {\n  .fr-header__tools-links {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 0.5rem;\n  }\n}\n.fr-header__tools-links > .fr-btn[class^=fr-icon-], .fr-header__tools-links > .fr-btn[class*=\" fr-icon-\"], .fr-header__tools-links > .fr-btn[class^=fr-fi-], .fr-header__tools-links > .fr-btn[class*=\" fr-fi-\"] {\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  min-height: 2rem;\n  padding: 0.25rem 0.75rem;\n  overflow: initial;\n  max-width: 100%;\n  max-height: none;\n}\n.fr-header__tools-links > .fr-btn[class^=fr-icon-]::before, .fr-header__tools-links > .fr-btn[class*=\" fr-icon-\"]::before, .fr-header__tools-links > .fr-btn[class^=fr-fi-]::before, .fr-header__tools-links > .fr-btn[class*=\" fr-fi-\"]::before {\n  --icon-size: 1rem;\n  margin-left: -0.125rem;\n  margin-right: 0.5rem;\n}\n\n.fr-header__tools-links > .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"]) {\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  min-height: 2rem;\n  padding: 0.25rem 0.75rem;\n  overflow: initial;\n  max-width: 100%;\n  max-height: none;\n}\n.fr-header__tools-links > .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n  --icon-size: 1rem;\n  margin-left: -0.125rem;\n  margin-right: 0.5rem;\n}\n\n@media (min-width: 62em) {\n  .fr-header__tools-links .fr-btns-group {\n    justify-content: flex-end;\n    margin: 0 -0.25rem -1rem;\n  }\n  .fr-header__tools-links .fr-btns-group .fr-btn {\n    width: auto;\n    max-width: 100%;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n  }\n  .fr-header__tools-links .fr-btns-group > li {\n    display: inline-flex;\n    max-width: 100%;\n    width: auto;\n  }\n  .fr-header__tools-links .fr-btns-group > li {\n    align-items: flex-start;\n  }\n  .fr-header__tools-links .fr-btns-group .fr-btn {\n    margin-left: 0.25rem;\n    margin-right: 0.25rem;\n  }\n}\n.fr-header .fr-header__menu-links::after {\n  content: \"\";\n  display: block;\n  margin: 0.75rem -1rem;\n  width: calc(100% + 2rem);\n  height: 1px;\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-header .fr-header__menu-links .fr-btn {\n    border: none;\n  }\n}\n.fr-header .fr-header__menu-links .fr-translate {\n  margin-left: -0.5rem;\n  margin-right: -0.5rem;\n}\n@media (min-width: 62em) {\n  .fr-header .fr-header__menu-links .fr-translate {\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n@media (min-width: 62em) {\n  .fr-header .fr-header__menu-links .fr-translate {\n    margin-bottom: -1rem;\n  }\n}\n.fr-header .fr-header__menu-links .fr-translate__btn {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.fr-header .fr-header__menu-links .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) {\n  display: flex;\n  flex-direction: column;\n}\n.fr-header .fr-header__menu-links .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn {\n  margin-bottom: 0;\n}\n.fr-header .fr-header__menu-links .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-], .fr-header .fr-header__menu-links .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"], .fr-header .fr-header__menu-links .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-], .fr-header .fr-header__menu-links .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"] {\n  min-height: 3rem;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.fr-header .fr-header__menu-links .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg):not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"]) {\n  min-height: 3rem;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n@media (min-width: 62em) {\n  .fr-header .fr-header__menu-links {\n    display: none;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-header .fr-nav {\n    justify-content: flex-start;\n  }\n  .fr-header .fr-nav__list {\n    margin: 0 -1rem;\n    max-width: calc(100% + 1rem);\n  }\n}\n\n.fr-header .fr-links-group {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n  display: flex;\n  align-items: stretch;\n  flex-wrap: wrap;\n}\n.fr-header .fr-links-group > li,\n.fr-header .fr-links-group > div {\n  width: 100%;\n  max-width: 100%;\n}\n.fr-header .fr-links-group .fr-btn {\n  width: calc(100% - 1rem);\n  margin: 0 0.5rem 1rem;\n  justify-content: center;\n}\n@media (min-width: 62em) {\n  .fr-header .fr-links-group {\n    justify-content: flex-end;\n  }\n  .fr-header .fr-links-group .fr-btn {\n    width: auto;\n    max-width: 100%;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n  }\n  .fr-header .fr-links-group > li {\n    display: inline-flex;\n    max-width: 100%;\n    width: auto;\n  }\n}\n.fr-header .fr-links-group .fr-link {\n  --underline-img: none;\n  --hover-tint: var(--hover);\n  --active-tint: var(--active);\n}\n.fr-header .fr-links-group .fr-link:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"]) {\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  min-height: 2rem;\n  padding: 0.25rem 0.75rem;\n}\n.fr-header .fr-links-group .fr-link:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before, .fr-header .fr-links-group .fr-link:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::after {\n  --icon-size: 1rem;\n}\n\n.fr-header .fr-links-group .fr-link[class^=fr-icon-], .fr-header .fr-links-group .fr-link[class*=\" fr-icon-\"], .fr-header .fr-links-group .fr-link[class^=fr-fi-], .fr-header .fr-links-group .fr-link[class*=\" fr-fi-\"] {\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n  min-height: 2rem;\n  padding: 0.25rem 0.75rem;\n  overflow: initial;\n  max-width: 100%;\n  max-height: none;\n}\n.fr-header .fr-links-group .fr-link[class^=fr-icon-]::before, .fr-header .fr-links-group .fr-link[class*=\" fr-icon-\"]::before, .fr-header .fr-links-group .fr-link[class^=fr-fi-]::before, .fr-header .fr-links-group .fr-link[class*=\" fr-fi-\"]::before {\n  --icon-size: 1rem;\n  margin-left: -0.125rem;\n  margin-right: 0.5rem;\n}\n.fr-header .fr-links-group .fr-link[class^=fr-icon-]::before, .fr-header .fr-links-group .fr-link[class*=\" fr-icon-\"]::before, .fr-header .fr-links-group .fr-link[class^=fr-fi-]::before, .fr-header .fr-links-group .fr-link[class*=\" fr-fi-\"]::before {\n  content: \"\";\n}\n\n@media (min-width: 62em) {\n  .fr-header__tools-links .fr-links-group {\n    justify-content: flex-end;\n    margin: 0 -0.25rem;\n  }\n  .fr-header__tools-links .fr-links-group .fr-btn {\n    width: auto;\n    max-width: 100%;\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n  }\n  .fr-header__tools-links .fr-links-group > li {\n    display: inline-flex;\n    max-width: 100%;\n    width: auto;\n  }\n  .fr-header__tools-links .fr-links-group .fr-link {\n    margin-left: 0.25rem;\n    margin-right: 0.25rem;\n  }\n}\n.fr-header .fr-header__menu-links .fr-links-group .fr-link {\n  width: 100%;\n  min-height: 3rem;\n  padding-left: 0;\n  margin-bottom: 0;\n}\n.fr-header .fr-modal > * > .fr-link--close {\n  margin-bottom: 1.5rem;\n}\n@media (min-width: 62em) {\n  .fr-header .fr-modal > * > .fr-link--close {\n    display: none;\n  }\n}\n\n.fr-header__brand {\n  z-index: calc(var(--ground) + 750);\n  background-color: var(--background-raised-grey);\n  --idle: transparent;\n  --hover: var(--background-raised-grey-hover);\n  --active: var(--background-raised-grey-active);\n  filter: drop-shadow(var(--raised-shadow));\n}\n.fr-header__service {\n  color: var(--text-title-grey);\n}\n.fr-header__service::before {\n  background-color: var(--border-default-grey);\n  --idle: transparent;\n  --hover: var(--border-default-grey-hover);\n  --active: var(--border-default-grey-active);\n}\n@media (min-width: 62em) {\n  .fr-header {\n    z-index: calc(var(--ground) + 750);\n    background-color: var(--background-raised-grey);\n    --idle: transparent;\n    --hover: var(--background-raised-grey-hover);\n    --active: var(--background-raised-grey-active);\n    filter: drop-shadow(var(--raised-shadow));\n  }\n  .fr-header__brand {\n    z-index: auto;\n    background: transparent;\n    filter: none;\n  }\n  .fr-header__service {\n    box-shadow: none;\n  }\n}\n.fr-header__menu-links::after {\n  box-shadow: inset 0 1px 0 0 var(--border-default-grey);\n}\n.fr-header__menu-links .fr-btn {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n  box-shadow: none;\n}\n.fr-header__menu-links .fr-btn:disabled, .fr-header__menu-links a.fr-btn:not([href]) {\n  color: var(--text-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n.fr-header__tools-links .fr-btn {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n}\n.fr-header__tools-links .fr-btn:disabled, .fr-header__tools-links a.fr-btn:not([href]) {\n  color: var(--text-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n.fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n  box-shadow: inset 0 0 0 1px var(--border-default-grey);\n}\n.fr-header__tools-links > .fr-translate:first-child:last-child .fr-btn:disabled, .fr-header__tools-links > .fr-translate:first-child:last-child a.fr-btn:not([href]) {\n  color: var(--text-disabled-grey);\n  box-shadow: inset 0 0 0 1px var(--border-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n.fr-header__navbar .fr-service__title {\n  color: var(--text-title-grey);\n}\n.fr-header__navbar .fr-btn {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n}\n.fr-header__navbar .fr-btn:disabled, .fr-header__navbar a.fr-btn:not([href]) {\n  color: var(--text-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n.fr-header__navbar .fr-btn--menu {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n  box-shadow: inset 0 0 0 1px var(--border-default-grey);\n}\n.fr-header__navbar .fr-btn--menu:disabled, .fr-header__navbar a.fr-btn--menu:not([href]) {\n  color: var(--text-disabled-grey);\n  box-shadow: inset 0 0 0 1px var(--border-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n@media (min-width: 62em) {\n  .fr-header .fr-header__menu {\n    box-shadow: inset 0 1px 0 0 var(--border-default-grey);\n  }\n}\n.fr-header .fr-modal {\n  background-color: var(--background-lifted-grey);\n  --idle: transparent;\n  --hover: var(--background-lifted-grey-hover);\n  --active: var(--background-lifted-grey-active);\n}\n\n.fr-header__menu-links .fr-link {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n.fr-header__menu-links .fr-link:disabled, .fr-header__menu-links a.fr-link:not([href]) {\n  color: var(--text-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n.fr-header__tools-links .fr-link {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n}\n.fr-header__tools-links .fr-link:disabled, .fr-header__tools-links a.fr-link:not([href]) {\n  color: var(--text-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}","////\n/// Header Main\n/// @group header\n////\n\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  HEADER\n\\* ˍˍˍˍˍˍˍˍˍ */\n\n@use 'src/module/path';\n@use 'src/module/shame/media-query';\n\n@include path.to-dist(2);\n@include media-query.order;\n\n@import 'index';\n@import 'style/module';\n@import 'style/scheme';\n\n// deprecated\n@import 'deprecated/style/module';\n@import 'deprecated/style/scheme';\n\n@include _header-scheme;\n\n// deprecated\n@include _header-deprecated-scheme;\n","////\n/// Header Module : default\n/// @group header\n////\n\n@use 'src/module/media-query';\n@use 'src/module/preference';\n\n#{ns(header)} {\n  @include disable-underline;\n  @include disable-list-style;\n  @include set-text-margin(0);\n  @include set-title-margin(0);\n  @include size(100%);\n  @include relative;\n\n  @include body {\n    &-row {\n      @include display-flex(row, center, flex-start);\n      @include margin(0 -4v);\n      @include padding(6v 0, lg);\n    }\n  }\n\n  @include preference.forced-colors {\n    outline: 1px solid;\n    @include media-query.respond-from(lg) {\n      outline: none;\n    }\n  }\n}\n","////\n/// Core Tool : Reset\n/// @group core\n////\n\n$underline-thickness: 0.0625em;\n\n@mixin a-reset ($minimal: false) {\n  text-decoration: var(--text-decoration);\n  @if not $minimal {\n    color: inherit;\n  }\n}\n\n@mixin init-underline() {\n  --underline-max-width: 100%;\n  --underline-hover-width: 0;\n  --underline-idle-width: var(--underline-max-width);\n  --underline-x: calc(var(--underline-max-width) * 0);\n  --underline-thickness: #{$underline-thickness};\n}\n\n@mixin enable-underline() {\n  --underline-img: linear-gradient(0deg, currentColor, currentColor);\n}\n\n@mixin enable-underline-legacy() {\n  [href] {\n    text-decoration: underline;\n  }\n}\n\n@mixin disable-underline() {\n  --underline-img: none;\n}\n\n@mixin disable-underline-legacy() {\n  [href] {\n    text-decoration: none;\n  }\n}\n\n@mixin link-underline() {\n  background-image: var(--underline-img), var(--underline-img);\n  background-position: var(--underline-x) 100%, var(--underline-x) calc(100% - var(--underline-thickness));\n  background-repeat: no-repeat, no-repeat;\n  transition: background-size 0s;\n  background-size: var(--underline-hover-width) calc(var(--underline-thickness) * 2), var(--underline-idle-width) var(--underline-thickness);\n}\n\n@mixin link-underline-hover-only() {\n  --underline-idle-width: 0;\n}\n\n@mixin hover-underline () {\n  &:hover,\n  &:active {\n    --underline-hover-width: var(--underline-max-width);\n  }\n}\n\n@mixin external-link() {\n  @include icon-style(after);\n  @include icon-size(sm, after);\n  @include icon-image(external-link-line, after);\n  @include icon-forced-color(linktext, true, after);\n  @include after(var(--external-link-content)) {\n    @include margin-left(1v);\n  }\n}\n\n@mixin enable-external() {\n  --external-link-content: '';\n}\n\n@mixin disable-external() {\n  --external-link-content: none;\n}\n\n@mixin target-blank ($unify: false) {\n  @if $unify and & {\n    &[target=\"_blank\"] {\n      @content;\n    }\n  }\n  @else {\n    [target=\"_blank\"] {\n      @content;\n    }\n  }\n}\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: disc;\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n\n@mixin enable-list-style-legacy($unify: false) {\n  $ul: ul;\n  $ol: ol;\n\n  @if $unify {\n    $ul: selector-associate('&', 'ul');\n    $ol: selector-associate('&', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: disc;\n    }\n\n    #{$ol} {\n      list-style-type: decimal;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(4v);\n      @include margin-y(2v);\n    }\n  }\n}\n\n@mixin disable-list-style-legacy($unify: false) {\n  $ul: '#{&} ul';\n  $ol: '#{&} ol';\n\n  @if $unify {\n    $ul: selector-associate('#{&}', 'ul');\n    $ol: selector-associate('#{&}', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: none;\n    }\n\n    #{$ol} {\n      list-style-type: none;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(0);\n      @include margin-y(0);\n    }\n  }\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@use 'src/module/spacing';\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} spacing.space($font-size) #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} spacing.space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@use '../../../../../module/spacing';\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{spacing.space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{spacing.space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{spacing.space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{spacing.space($max-height)};\n    }\n  }\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@use 'src/module/spacing';\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin top($top) {\n  top: spacing.space($top);\n}\n\n@mixin right($top) {\n  right: spacing.space($top);\n}\n\n@mixin bottom($top) {\n  bottom: spacing.space($top);\n}\n\n@mixin left($top) {\n  left: spacing.space($top);\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n@use 'src/module/spacing';\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: spacing.space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Header Module : brand\n/// @group header\n////\n\n@use 'src/module/media-query';\n@use 'src/module/spacing';\n\n#{ns(header)} {\n  &__brand {\n    @include display-flex(row, center, flex-start, wrap);\n    @include margin-y(-4v, lg);\n    @include size(100%);\n    @include padding-x(1v);\n\n    @include after('', block) {\n      @include relative;\n      @include z-index(over);\n      flex: 1;\n      align-self: stretch;\n    }\n\n    @include media-query.respond-from(lg) {\n      flex-wrap: nowrap;\n      @include size(auto);\n      @include padding-x(0);\n    }\n\n    &-top {\n      @include display-flex(row, center, flex-start);\n      @include size(100%);\n      @include size(auto, null, lg);\n      overflow: hidden;\n    }\n\n    @include hover-media-query {\n      &#{ns(enlarge-link)} {\n        a[href] {\n          &:hover {\n            --a: 0.1;\n          }\n\n          &:active {\n            --a: 0.2;\n          }\n        }\n      }\n    }\n\n    &#{ns(enlarge-link)} {\n      a[href] {\n        @include before {\n          outline-offset: -2px;\n\n          @include media-query.respond-from(lg) {\n            outline-offset: 2px;\n          }\n        }\n      }\n    }\n  }\n\n  &__logo,\n  &__operator,\n  &__service {\n    @include padding(4v, lg);\n  }\n\n  &__logo {\n    order: 1;\n    flex: 0 0 auto;\n    @include padding(3v);\n    @include logo(sm, null) {\n      @include margin(-3v);\n    }\n  }\n\n  &__operator {\n    @include padding(3v);\n    order: 2;\n    flex: 0 1 auto;\n\n    img {\n      display: block;\n      @include min-width(14v);\n    }\n  }\n\n  &__service {\n    @include padding-y(3v);\n    @include margin-x(3v);\n    @include margin-x(0, lg);\n    @include disable-external();\n\n    @include before(\"\", block) {\n      @include size(calc(100% - 8v), 1px);\n      @include absolute;\n      transform: translateY(spacing.space(-3v));\n      @include media-query.respond-from(lg) {\n        content: none;\n      }\n    }\n\n    &-title {\n      @include title-style(h6, false);\n\n      #{ns(badge)} {\n        vertical-align: middle;\n        @include margin(-1v 0 0 1v);\n      }\n    }\n\n    &-tagline {\n      @include text-style(sm);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'src/module/elevation/variable/z-indexes';\n@use 'src/module/legacy';\n\n@mixin z-index($level, $legacy: false) {\n  @if map.has-key(z-indexes.$values, $level) {\n    $z-index: map.get(z-indexes.$values, $level);\n    @if $legacy {\n      @include legacy.is(ie11) {\n        z-index: #{$z-index};\n      }\n    }\n    @else {\n      z-index: calc(var(--ground) + #{$z-index});\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'src/module/legacy';\n@use 'src/module/media-query';\n@use 'src/module/spacing';\n@use 'src/module/specificity';\n@use 'src/module/string';\n@use 'src/module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy == true {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","@use 'sass:map';\n@use 'src/module/elevation/variable/shadows';\n@use 'src/module/utilities';\n@use '../variable/colors';\n@use 'src/module/legacy';\n\n@mixin shadow($layer, $legacy: false, $background: null) {\n  @if $legacy {\n    @include utilities.nest($background) {\n      @include legacy.is(ie11) {\n        box-shadow: 0 0 0 1px #{map.get(colors.$values, light)};\n      }\n    }\n  }\n  @else {\n    @if map.has-key(shadows.$values, $layer) {\n      filter: drop-shadow(var(--#{$layer}-shadow));\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Spacing z-index\n/// @group core\n////\n\n/// Fonction de gestion des z-index\n/// @access public\n/// @param {String} $index-name - nom du calque de z-index\n@function z-index($index-name) {\n  @return map-get($z-indexes, $index-name);\n}\n\n/// Mixin de gestion des z-index\n/// @access public\n/// @param {String} $index-name - nom du calque de z-index\n@mixin z-index($index-name) {\n  z-index: z-index($index-name);\n}\n","////\n/// Logo Tool\n/// @group logo\n////\n\n@use \"sass:math\";\n@use 'src/module/spacing';\n@use 'src/module/preference';\n\n@mixin logo-size($size) {\n  $font-size: spacing.space(map-get($logo-sizes, $size));\n  font-size: #{$font-size * 1.05};\n\n  @include before {\n    @include size(#{2.75 * $font-size}, #{$font-size});\n    @include margin-bottom(#{math.div($font-size, 3)});\n    background-size: #{2.75 * $font-size} #{1.125 * $font-size}, #{2.75 * $font-size} #{$font-size}, 0;\n    background-position: 0 #{(-0.0625 * $font-size)}, 0 0, 0 0;\n\n    @at-root :root#{ns-attr(mourning)} #{&} {\n      background-size: #{2.75 * $font-size} #{1.125 * $font-size}, 0, #{2.75 * $font-size} #{$font-size};\n    }\n  }\n\n  @include after {\n    min-width: #{2.625 * $font-size};\n    background-size: #{5.25 * $font-size} #{3.75 * $font-size};\n    background-position: 0 calc(100% + #{1.875 * $font-size});\n    padding-top: #{(math.div(53, 24) * $font-size)};\n\n    @at-root #{ns-attr(theme, 'dark')} #{&} {\n      background-position: #{-2.625 * $font-size} 100%;\n    }\n\n    @media (prefers-color-scheme: dark) and (forced-colors: active) {\n      background-position: #{-2.625 * $font-size} 100%;\n\n      @at-root #{ns-attr(theme, 'dark')} #{&} {\n        background-position: #{-2.625 * $font-size} 100%;\n      }\n    }\n\n    @media (prefers-color-scheme: light) and (forced-colors: active) {\n      background-position: 0 calc(100% + #{1.875 * $font-size});\n\n      @at-root #{ns-attr(theme, 'dark')} #{&} {\n        background-position: 0 calc(100% + #{1.875 * $font-size});\n      }\n    }\n  }\n}\n\n@mixin logo($size: md, $size-md: null) {\n  #{ns(logo)} {\n    @include logo-size($size);\n    @include padding(map-get($logo-sizes, $size));\n\n    @if $size-md != null {\n      @include respond-from(md) {\n        @include logo-size($size-md);\n        @include padding(map-get($logo-sizes, $size-md));\n      }\n    }\n\n    @content;\n  }\n}\n","////\n/// Header Module : modal\n/// @group header\n////\n\n#{ns(header)} {\n  #{ns(modal)} {\n    overflow: auto;\n    justify-content: initial;\n\n    &:not([role=\"dialog\"]) {\n      transition: none;\n    }\n\n    @include before(none);\n    @include after(none);\n\n    @include respond-from(lg) {\n      @include margin(0);\n      @include size(auto, auto);\n      visibility: inherit;\n      opacity: 1;\n      position: initial;\n      background-color: transparent;\n      overflow: initial;\n    }\n\n    & > * > #{ns(btn--close)} {\n      @include margin-bottom(6v);\n      @include respond-from(lg) {\n        display: none;\n      }\n    }\n\n    & > #{ns(container)} {\n      pointer-events: all;\n      @include padding-top(4v);\n      @include padding-bottom(18v);\n      @include height(100%);\n      overflow: inherit;\n\n      @include respond-from(lg) {\n        @include padding-y(0);\n        @include height(auto);\n      }\n    }\n  }\n}\n","////\n/// Header Module : navigation bar\n/// @group header\n////\n\n@use 'src/module/elevation';\n\n#{ns(header)} {\n  &__navbar {\n    @include display-flex(row, flex-start, flex-end);\n    @include padding(1v);\n    @include margin-right(-2v);\n    @include margin-top(1v);\n    order: 3;\n    flex: 1;\n    align-self: stretch;\n    @include elevation.z-index(overlap);\n\n    @include respond-from(lg) {\n      display: none;\n    }\n\n    @include nest-btn(md, only) {\n      @include margin-left(2v);\n      @include margin-right(2v);\n      flex: 0 0 auto;\n      white-space: nowrap;\n\n      &--menu {\n        @include icon(menu-fill, null, before);\n        @include icon-forced-color(buttontext, true, before);\n      }\n\n      &--search {\n        @include icon(search-line, null, before);\n        @include icon-forced-color(buttontext, true, before);\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Selector nest\n/// @group core\n////\n\n@mixin nest($selector: null) {\n  @if $selector {\n    #{$selector} {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Link Tool : sizes\n/// @group link\n////\n\n@use \"sass:math\";\n@use 'src/module/spacing';\n\n@mixin _build-link-size($size-settings, $border-radius: false) {\n  $font-size: map_get($size-settings, font-size);\n  $style: get-text-style($font-size);\n  $line-height: spacing.space(map_get($style, line-height));\n  font-size: spacing.space($font-size);\n  line-height: $line-height;\n\n  $min-height: spacing.space(map_get($size-settings, min-height));\n  @if $min-height > 0 {\n    min-height: $min-height;\n  }\n\n  $max-icon-height: icon-size(md);\n\n  @if map_has_key($size-settings, icon-only) {\n    $max-icon-height: icon-size(map_get($size-settings, icon-only));\n  }\n  @else if map_has_key($size-settings, icon) {\n    $max-icon-height: icon-size(map_get($size-settings, icon));\n  }\n\n  $space-y: math.max($line-height, $max-icon-height);\n  $padding-x: spacing.space(map_get($size-settings, padding-x));\n  $padding-y: math.max(($min-height - $space-y) * 0.5, 0);\n\n  padding: #{$padding-y} #{$padding-x};\n\n  @if $border-radius {\n    border-radius: #{$min-height * 0.5};\n  }\n}\n\n@function _link-icon-margin($size) {\n  @return math.div(icon-size($size), 8);\n}\n\n@mixin _link-align-on-content($size, $place, $size-settings) {\n  $padding-x: spacing.space(map_get($size-settings, padding-x));\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n\n  @if $place == null {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n  @else if $place == left {\n    margin-left: -($padding-x - $icon-margin);\n    margin-right: -($padding-x);\n  }\n  @else if $place == right {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x - $icon-margin);\n  }\n  @else if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n    $min-height: spacing.space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) * 0.5;\n\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n}\n","////\n/// Link Tool : icons\n/// @group link\n////\n\n@use 'src/module/spacing';\n\n@mixin _build-link-icon($size-settings, $place, $size:md, $override-icon: true) {\n\n  $icon-size: icon-size(map_get($size-settings, icon));\n\n  @if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n  }\n\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n  $icon-margin-x: spacing.space(map_get($size-settings, icon-margin-x));\n\n  @if $place == left {\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n    @include before {\n      --icon-size: #{$icon-size};\n      margin-left: -($icon-margin);\n      margin-right: $icon-margin-x;\n    }\n  }\n  @else if $place == right {\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n    @include icon-content(false, $override-icon) {\n      --icon-size: #{$icon-size};\n      margin-right: -($icon-margin);\n      margin-left: $icon-margin-x;\n    }\n  }\n  @else if $place == only {\n    $min-height: spacing.space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) * 0.5;\n\n    overflow: hidden;\n    white-space: nowrap;\n    max-width: $min-height;\n    max-height: $min-height;\n    padding-left: $padding-x;\n    padding-right: $padding-x;\n\n    @include before {\n      --icon-size: #{$icon-size};\n      margin-left: 0;\n      margin-right: $padding-x;\n    }\n  }\n}\n","////\n/// Core Tool : Icon default\n/// @group core\n////\n\n@use 'src/module/path';\n@use 'src/module/spacing';\n@use 'src/module/specificity';\n@use 'src/module/preference';\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return spacing.space(map-get($icon-size-map, $size));\n}\n\n@function get-icon-url($icon, $important: false) {\n  $config: map-get($icons-config, $icon);\n  $url: url('#{path.dist()}#{map-get($config, path)}');\n  @return specificity.important($url, $important);\n}\n\n@function get-icon-pseudo($restrain) {\n  @if $restrain == before or $restrain == after {\n    @return $restrain;\n  }\n  @return before after;\n}\n\n@mixin _icon-pseudo ($restrain: null) {\n  @include _pseudo(get-icon-pseudo($restrain)) {\n    @content;\n  }\n}\n\n@mixin icon-size ($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    --icon-size: #{icon-size($size)};\n    @content;\n  }\n}\n\n@mixin icon-image ($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n\n  @include _icon-pseudo($restrain) {\n    @include mask-image($url);\n  }\n}\n\n@mixin icon-style($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    flex: 0 0 auto;\n    display: inline-block;\n    vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n    background-color: currentColor;\n    @include size(var(--icon-size), var(--icon-size));\n    @include mask-image-size(100% 100%);\n    @content;\n  }\n}\n\n@mixin icon-content($is-before: true, $override: false) {\n  $pseudos: before after;\n  @if not $is-before {\n    $pseudos: after before;\n  }\n  @include _pseudo(nth($pseudos, 1), '') {\n    @content;\n  }\n  @if $override {\n    @include _pseudo(nth($pseudos, 2), none);\n  }\n}\n\n@mixin icon($icon: null, $size: md, $restrain: null, $styling: true, $is-before: $restrain != after, $override: false) {\n  @if $styling {\n    @include icon-style($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size($size, $restrain);\n  }\n\n  @if $is-before != null {\n    @include icon-content($is-before, $override) {\n      @content;\n    }\n  }\n}\n\n@mixin icon-forced-color($color: graytext, $adjust: false, $restrain: before after) {\n  @include _pseudo($restrain) {\n    @include preference.forced-colors {\n      @if $adjust == true {\n        forced-color-adjust: none;\n      }\n      background-color: $color;\n    }\n  }\n}\n\n@function filter-icons($category, $config: $icons-config) {\n  $filtered: ();\n  @each $icon, $setting in $config {\n    @if map-get($setting, category) == $category {\n      $filtered: map-merge($filtered, (#{$icon}: $setting));\n    }\n  }\n  @return $filtered;\n}\n\n@mixin generate-icons($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image($icon);\n    }\n  }\n}\n","////\n/// Core Tool : mask-image\n/// @group core\n////\n\n@mixin mask-image($value) {\n  -webkit-mask-image: $value;\n  mask-image: $value;\n}\n\n@mixin mask-image-size($value) {\n  -webkit-mask-size: $value;\n  mask-size: $value;\n}\n\n@mixin mask-image-position($value) {\n  -webkit-mask-position: $value;\n  mask-position: $value;\n}\n\n@mixin mask-image-repeat($value) {\n  -webkit-mask-repeat: $value;\n  mask-repeat: $value;\n}\n","////\n/// Header Module : shortcuts\n/// @group header\n////\n\n@use 'src/module/preference';\n\n#{ns(header)} {\n  #{ns-group(btns)} {\n    &:not(#{ns-group(btns)}--sm):not(#{ns-group(btns)}--lg) {\n      @include class-not-start-with(#{ns(btns-group--icon-, '')}) {\n        #{ns(btn)} {\n          justify-content: flex-start;\n          @include nest-btn(md, left, null, null, false);\n\n          @include respond-from(lg) {\n            @include has-icon {\n              @include nest-btn(sm, left, null, null, false);\n            }\n\n            @include has-not-icon {\n              @include nest-btn(sm, left, null, null, false);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  &__tools-links {\n    display: none;\n\n    @include respond-from(lg) {\n      @include display-flex(row, null, flex-end);\n      gap: space(2v);\n    }\n\n    > #{ns(btn)} {\n      @include has-icon {\n        @include nest-btn(sm, left, null, null, false);\n      }\n\n      @include has-not-icon {\n        @include nest-btn(sm, left, null, null, false);\n      }\n    }\n\n    #{ns-group(btns)} {\n      @include respond-from(lg) {\n        @include horizontal-btns-group;\n        justify-content: flex-end;\n        @include margin(0 -1v -4v);\n\n        & > li {\n          align-items: flex-start;\n        }\n\n        #{ns(btn)} {\n          @include margin-x(1v);\n        }\n      }\n    }\n  }\n\n  & &__menu-links {\n    @include after('', block) {\n      @include margin(3v -4v);\n      @include size(calc(100% + 8v), 1px);\n    }\n\n    #{ns(btn)} {\n      @include preference.forced-colors {\n        border: none;\n      }\n    }\n\n    #{ns(translate)} {\n      @include margin-x(-2v);\n      @include margin-x(0, lg);\n      @include margin-bottom(-4v, lg);\n\n      &__btn {\n        @include padding-x(2v);\n      }\n    }\n\n    #{ns-group(btns)} {\n      &:not(#{ns-group(btns)}--sm):not(#{ns-group(btns)}--lg) {\n        @include class-not-start-with(#{ns(btns-group--icon-, '')}) {\n          @include display-flex(column);\n\n          #{ns(btn)} {\n            @include has-icon {\n              @include min-size(null, 12v);\n              @include padding-x(0);\n            }\n\n            @include has-not-icon {\n              @include min-size(null, 12v);\n              @include padding-x(0);\n            }\n\n            @include margin-bottom(0);\n          }\n        }\n      }\n    }\n\n    @include respond-from(lg) {\n      display: none;\n    }\n  }\n}\n","////\n/// Core Tool : Selector pattern\n/// @group core\n////\n\n@mixin _class-pattern($selector, $unify: true) {\n  @if & == null {\n    @at-root #{$selector} {\n      @content;\n    }\n  }\n  @else if $unify {\n    @at-root #{selector-unify(&, $selector)} {\n      @content;\n    }\n  }\n  @else {\n    #{$selector} {\n      @content;\n    }\n  }\n}\n\n@mixin class-contains($unify: true, $patterns...) {\n\n  @if length($patterns) == 1 and length(nth($patterns, 1)) > 1 {\n    $patterns: nth($patterns, 1);\n  }\n\n  $selectors: '';\n\n  @each $pattern in $patterns {\n    $selectors: '#{$selectors}[class*=\"#{$pattern}\"]';\n  }\n\n  @include _class-pattern($selectors, $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-contains($unify: true, $patterns...) {\n\n  @if length($patterns) == 1 and length(nth($patterns, 1)) > 1 {\n    $patterns: nth($patterns, 1);\n  }\n\n  $selectors: '';\n  @each $pattern in $patterns {\n    $selectors: '#{$selectors}:not([class*=\"#{$pattern}\"])';\n  }\n\n  @include _class-pattern($selectors, $unify) {\n    @content;\n  }\n}\n\n@mixin class-start-with($start, $unify: true) {\n  @include _class-pattern(class-start-with($start), $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-start-with($start, $unify: true) {\n  @include _class-pattern(class-not-start-with($start), $unify) {\n    @content;\n  }\n}\n\n@mixin class-end-with($end, $unify: true) {\n  @include _class-pattern(class-end-with($end), $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-end-with($end, $unify: true) {\n  @include _class-pattern(class-not-end-with($end), $unify) {\n    @content;\n  }\n}\n\n@mixin class-is-ns($unify: true) {\n  @include class-start-with(ns('', ''), $unify) {\n    @content;\n  }\n}\n\n@mixin class-is-not-ns($unify: true) {\n  @include class-not-start-with(ns('', ''), $unify) {\n    @content;\n  }\n}\n","#{ns(header)} {\n  #{ns(links-group)} {\n    @include disable-list-style;\n    @include display-flex(null, stretch, null, wrap);\n    @include vertical-btns-group;\n\n    @include respond-from(lg) {\n      justify-content: flex-end;\n      @include horizontal-btns-group;\n    }\n\n    #{ns(link)} {\n      @include disable-underline;\n      @include enable-tint;\n\n      @include has-not-icon {\n        @include nest-btn(sm, null, null, null, false);\n      }\n\n      @include has-icon {\n        @include nest-btn(sm, left, null, null, false);\n        @include before('');\n      }\n    }\n  }\n\n  &__tools-links {\n    #{ns-group(links)} {\n      @include respond-from(lg) {\n        @include horizontal-btns-group;\n        justify-content: flex-end;\n        @include margin(0 -1v);\n\n        #{ns(link)} {\n          @include margin-x(1v);\n        }\n      }\n    }\n  }\n\n  & &__menu-links {\n    #{ns(links-group)} {\n      #{ns(link)} {\n        @include size(100%);\n        @include min-size(null, 12v);\n        @include padding-left(0);\n        @include margin-bottom(0);\n      }\n    }\n  }\n\n  #{ns(modal)} {\n    & > * > #{ns(link--close)} {\n      @include margin-bottom(6v);\n      @include respond-from(lg) {\n        display: none;\n      }\n    }\n  }\n}\n","////\n/// Button Tool - group\n/// @group button\n////\n\n@mixin horizontal-btns-group() {\n  #{ns(btn)} {\n    width: auto;\n    max-width: 100%;\n    @include margin-x(2v);\n  }\n\n  > li {\n    display: inline-flex;\n    max-width: 100%;\n    width: auto;\n  }\n}\n\n@mixin vertical-btns-group() {\n  > li,\n  > div {\n    width: 100%;\n    max-width: 100%;\n  }\n\n  #{ns(btn)} {\n    @include size(calc(100% - 4v));\n    @include margin(0 2v 4v);\n    justify-content: center;\n  }\n}\n","////\n/// Core Tool : Action Hover\n/// @group core\n////\n\n@mixin hover-media-query () {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin hover-type-selector($elements, $type: all, $check-disabled: false) {\n  $selectors: ();\n\n  @each $element, $setting in $elements {\n    $hover: map-get($setting, hover);\n    $selector: map-get($setting, selector);\n    @if $hover {\n      @if $type == map-get($hover, type) or $type == all {\n        $nested: $selector;\n        @if $check-disabled {\n          $nested: nest($selector, map-get($hover, selector));\n        }\n        $associated: $nested;\n        @if & != null and '#{&}' != ':root' {\n          $associated: selector-associate('#{&}', $nested);\n        }\n        $selectors: append($selectors, $associated, 'comma');\n      }\n    }\n  }\n\n  @at-root #{$selectors} {\n    @content;\n  }\n}\n\n@mixin hover-tint () {\n  &:hover {\n    background-color: var(--hover-tint);\n  }\n\n  &:active {\n    background-color: var(--active-tint);\n  }\n}\n\n@mixin enable-tint () {\n  @include tint-enabled(true, true);\n}\n\n@mixin disable-tint() {\n  @include tint-enabled(false, false);\n}\n\n@mixin tint-enabled ($hover: null, $active: null) {\n  @if $hover {\n    --hover-tint: var(--hover);\n  }\n  @else if $hover == false {\n    --hover-tint: var(--idle);\n  }\n\n  @if $active {\n    --active-tint: var(--active);\n  }\n  @else if $active == false {\n    --active-tint: var(--idle);\n  }\n}\n\n@mixin hover-brighten ($element, $img) {\n  @at-root #{$element} {\n    &:hover {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten});\n      }\n    }\n\n    &:active {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten * 2});\n      }\n    }\n  }\n}\n\n@mixin hover-brighten-filter () {\n  filter: brightness(var(--brightness));\n}\n","////\n/// header Scheme\n/// @group header\n////\n\n@use 'src/module/color';\n@use 'src/module/elevation';\n@use 'src/module/media-query';\n\n@mixin _header-scheme($legacy: false) {\n  #{ns(header)} {\n    &__brand {\n      @include elevation.elevate(raised-over, (legacy: $legacy));\n    }\n\n    &__service {\n      @include color.text(title grey, (legacy:$legacy));\n\n      @include before {\n        @include color.background(border default grey, (legacy:$legacy));\n      }\n    }\n\n    @include media-query.respond-from(lg) {\n      @include elevation.elevate(raised-over, (legacy: $legacy));\n\n      &__brand {\n        @include elevation.drop((legacy:$legacy));\n      }\n\n      &__service {\n        @include color.no-box-shadow((legacy:$legacy));\n      }\n    }\n\n    &__menu-links {\n      @include after {\n        @include color.box-shadow(default grey, (legacy:$legacy), top-1-in);\n      }\n\n      #{ns(btn)} {\n        @include btn-kind-scheme(4, $legacy);\n        @include color.no-box-shadow((legacy: $legacy));\n      }\n    }\n\n    &__tools-links {\n      #{ns(btn)} {\n        @include btn-kind-scheme(4, $legacy);\n      }\n\n      > #{ns(translate)}:first-child:last-child {\n        #{ns(btn)} {\n          @include btn-kind-scheme(3, $legacy);\n        }\n      }\n    }\n\n    &__navbar {\n      #{ns(service)} {\n        @include title {\n          @include color.text(title grey, (legacy:$legacy));\n        }\n      }\n\n      #{ns(btn)} {\n        @include btn-kind-scheme(4, $legacy);\n\n        &--menu {\n          @include btn-kind-scheme(3, $legacy);\n        }\n      }\n    }\n\n    #{ns(header__menu)} {\n      @include respond-from(lg) {\n        @include color.box-shadow(default grey, (legacy:$legacy), top-1-in);\n      }\n    }\n\n    #{ns(modal)} {\n      @include color.background(lifted grey, (legacy:$legacy));\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'colors';\n@use 'src/module/selector';\n\n/// Applique les couleurs disabled sur l'élément avec les sélecteurs appropriés\n/// @access public\n/// @param {map} map des options :\n///   - can-be-link {boolean}: ajoute le sélecteur de lien sans href.\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin selector($options: (), $colors: null) {\n  $selectors: '&:disabled';\n  @if map.get($options, can-be-link) {\n    $selectors: list.append($selectors, selector.associate(&, 'a:not([href])'), comma);\n  }\n\n  @at-root #{$selectors} {\n    @if $colors != null {\n      @include colors.colors($colors);\n    }\n    @content;\n  }\n}\n","////\n/// Core Tool : Selector block\n/// @group core\n////\n\n@mixin title() {\n  &__title {\n    @content;\n  }\n}\n\n@mixin body() {\n  &__body {\n    @content;\n  }\n}\n\n@mixin list() {\n  &__list {\n    @content;\n  }\n}\n\n@mixin list-item() {\n  &__item {\n    @content;\n  }\n}\n","////\n/// header Scheme\n/// @group header\n////\n\n@use 'src/module/color';\n\n@mixin _header-deprecated-scheme($legacy: false) {\n  #{ns(header)} {\n    &__menu-links {\n      #{ns(link)} {\n        @include btn-kind-scheme(4, $legacy);\n        @include color.box-shadow(default grey, (legacy:$legacy), bottom-1-in);\n      }\n    }\n\n    &__tools-links {\n      #{ns(link)} {\n        @include btn-kind-scheme(4, $legacy);\n      }\n    }\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'src/module/media-query/variable/breakpoints';\n@use 'src/module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use 'src/module/legacy';\n@use 'src/module/utilities';\n\n@mixin drop($options: ()) {\n  $legacy: map.get($options, legacy);\n  $background: map.get($options, background);\n  @if $legacy {\n    @include legacy.is(ie11) {\n      z-index: auto;\n      background: transparent;\n      @include utilities.nest($background) {\n        box-shadow: none;\n      }\n    }\n  }\n  @else {\n    z-index: auto;\n    background: transparent;\n    filter: none;\n  }\n}\n","////\n/// Header Module : tools\n/// @group header\n////\n\n#{ns(header)} {\n  &__tools {\n    @include respond-from(lg) {\n      flex-direction: column;\n      align-items: flex-end;\n      text-align: right;\n      @include padding-x(4v);\n      @include margin-left(auto);\n      flex: 1 0 auto;\n\n      &-links + #{ns(header__search)} {\n        @include margin-top(4v);\n      }\n    }\n\n    #{ns(header__search)} {\n      @include respond-from(lg) {\n        @include max-size(96v);\n        @include margin-left(auto);\n      }\n    }\n  }\n}\n","////\n/// Header Module : navigation\n/// @group header\n////\n\n#{ns(header)} {\n  #{ns(nav)} {\n    @include respond-from(lg) {\n      justify-content: flex-start;\n\n      &__list {\n        @include margin(0 -4v);\n        @include max-width(calc(100% + 4v));\n      }\n    }\n  }\n}\n","///  Mixin de contraste pour le windows high contrast mode\n///  @param {string} $active - active ou none\n/// @example scss -\n/// pour un contraste plus élevé\n/// @include forced-colors() {\n///   // your styles\n/// }\n\n@mixin forced-colors($active: active) {\n  @media (-ms-high-contrast: $active), (forced-colors: $active) {\n    @content;\n  }\n}\n"]}