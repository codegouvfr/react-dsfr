{"version":3,"sources":["<no source>","file:///Users/ket/Documents/work/dsfr/src/module/media-query/mixin/_respond-from.scss","file:///Users/ket/Documents/work/dsfr/src/module/shame/media-query/mixin/_order.scss","%3Cinput%20css%20NYdCYb%3E","file:///Users/ket/Documents/work/dsfr/src/module/legacy/mixin/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/form/style/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/module/color/mixin/_element.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/selector/tool/_pseudo.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/icon/tool/_legacy.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/spacing/tool/_size.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/form/style/_scheme.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/form/deprecated/style/_scheme.scss"],"names":[],"mappings":"AAAA;;GAAA,ACeI;ECRI,cAAA,CCLR,CFaI;ECRI,cAAA,CCFR,CFUI;ECRI,cAAA,CCCR,CFOI;ECRI,cAAA,CCIR,CCFI,6DCAA,qBCgCA,aAAA,CD/BE,cFKJ,CICA,mDCME,4BAAA,CANA,2DAFI,CAUJ,2BAAA,CADA,oBAAA,CCsCE,WAAA,CAHA,UNtCJ,CIJA,mDCAE,6DLgBF,CIhBA,oGCME,4BAAA,CAEA,2BAAA,CADA,oBAAA,CCsCE,WAAA,CAHA,UNdJ,CI5BA,iDCAE,0DL4BF,CI5BA,uDCME,4BAAA,CANA,6DAFI,CAUJ,2BAAA,CADA,oBAAA,CCsCE,WAAA,CAHA,UNFJ,CO7CI,sHJ8BF,aH2BF,COnDI,sHJwBF,aHgCF,COlDI,kHJkBF,aHqCF,COjDI,oSJYF,aH8CF,COnDA,UJKE,aHoDF,COtDE,iBJEA,aHyDF,COvDE,mBJFA,aH8DF,COxDE,gBJNA,aHmEF,COxDI,sDJXF,aHwEF,COtDA,0BJlBE,UH+EF,COvDE,mBJxBA,aHqFF,COzDE,mBJ5BA,aH0FF,CO1DE,kBJhCA,aH+FF,CO3DE,qBJpCA,aHoGF,COhDM,iPJpDJ,aHoHF,COpDE,6DJhEA,sDH+HF,CO1DE,uEJrEA,aHoIF,CO1DE,6DJ1EA,sDHyIF,CO1DE,uEJ/EA,aH8IF,CO1DE,2DJpFA,sDHmJF,CO1DE,qEJzFA,aHwJF,CIjLA,2CCAE,2DLyLF,CIzLA,sFCME,4BAAA,CAEA,2BAAA,CADA,oBAAA,CCsCE,WAAA,CAHA,UN2JJ,CIrMA,2CCAE,6DLqMF,CQ5MA,eLgCE,aHwLF,CQpNA,eL4BE,aH8LF,CQtNA,cLwBE,aHoMF,CI7NA,iDDyBE,kCH0MF,CInOA,iDDyBE,kCH+MF,CIxOA,gDDyBE,kCHoNF,CA7LF","file":"form.legacy.min.css","sourcesContent":[null,"@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'src/module/media-query/variable/breakpoints';\n@use 'src/module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset__legend {\n    max-width: 100%;\n  }\n  .fr-message--error::before, .fr-message--error::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-message--error::before, .fr-message--error::after {\n    background-image: url(\"../../icons/system/fr--error-fill.svg\");\n  }\n  .fr-message--error::before, .fr-message--error::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-message--valid::before, .fr-message--valid::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-message--valid::before, .fr-message--valid::after {\n    background-image: url(\"../../icons/system/fr--success-fill.svg\");\n  }\n  .fr-message--valid::before, .fr-message--valid::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-message--info::before, .fr-message--info::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-message--info::before, .fr-message--info::after {\n    background-image: url(\"../../icons/system/fr--info-fill.svg\");\n  }\n  .fr-message--info::before, .fr-message--info::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-message--warning::before, .fr-message--warning::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-message--warning::before, .fr-message--warning::after {\n    background-image: url(\"../../icons/system/fr--warning-fill.svg\");\n  }\n  .fr-message--warning::before, .fr-message--warning::after {\n    width: 1rem;\n    height: 1rem;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-select-group--valid label, .fr-input-group--valid label, .fr-range-group--valid label, .fr-upload-group--valid label {\n    color: #18753c;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-select-group--error label, .fr-input-group--error label, .fr-range-group--error label, .fr-upload-group--error label {\n    color: #ce0500;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-select-group--info label, .fr-input-group--info label, .fr-range-group--info label, .fr-upload-group--info label {\n    color: #0063cb;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-select-group--disabled label,\n  .fr-select-group--disabled .fr-hint-text, .fr-input-group--disabled label,\n  .fr-input-group--disabled .fr-hint-text, .fr-range-group--disabled label,\n  .fr-range-group--disabled .fr-hint-text, .fr-upload-group--disabled label,\n  .fr-upload-group--disabled .fr-hint-text {\n    color: #929292;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-label {\n    color: #161616;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-label--error {\n    color: #ce0500;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-label--success {\n    color: #18753c;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-label--info {\n    color: #0063cb;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-label--disabled, .fr-label--disabled .fr-hint-text {\n    color: #929292;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-hint-text,\n  .fr-message {\n    color: #666;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-message--error {\n    color: #ce0500;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-message--valid {\n    color: #18753c;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-message--info {\n    color: #0063cb;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-message--warning {\n    color: #b34000;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset:disabled .fr-label,\n  .fr-fieldset:disabled .fr-hint-text,\n  .fr-fieldset:disabled .fr-fieldset__legend {\n    color: #929292;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset input:disabled + label,\n  .fr-fieldset input:disabled + label .fr-hint-text,\n  .fr-fieldset input:disabled + label + .fr-hint-text {\n    color: #929292;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset__legend {\n    color: #161616;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--error, .fr-fieldset--error .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #ce0500, #ce0500);\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--error .fr-fieldset__legend, .fr-fieldset--error .fr-label {\n    color: #ce0500;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--valid, .fr-fieldset--valid .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #18753c, #18753c);\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--valid .fr-fieldset__legend, .fr-fieldset--valid .fr-label {\n    color: #18753c;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--info, .fr-fieldset--info .fr-fieldset__legend {\n    background-image: linear-gradient(0deg, #0063cb, #0063cb);\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--info .fr-fieldset__legend, .fr-fieldset--info .fr-label {\n    color: #0063cb;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-error-text::before, .fr-error-text::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-error-text::before, .fr-error-text::after {\n    background-image: url(\"../../icons/system/fr--error-fill.svg\");\n  }\n  .fr-error-text::before, .fr-error-text::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-valid-text::before, .fr-valid-text::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-valid-text::before, .fr-valid-text::after {\n    background-image: url(\"../../icons/system/fr--success-fill.svg\");\n  }\n  .fr-valid-text::before, .fr-valid-text::after {\n    width: 1rem;\n    height: 1rem;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-error-text {\n    color: #ce0500;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-valid-text {\n    color: #18753c;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-info-text {\n    color: #0063cb;\n  }\n}\n\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--valid .fr-fieldset__content::before {\n    box-shadow: inset 2px 0 0 0 #18753c;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--error .fr-fieldset__content::before {\n    box-shadow: inset 2px 0 0 0 #ce0500;\n  }\n}\n@media screen and (min-width: 0\\0 ) and (min-resolution: 72dpi) {\n  .fr-fieldset--info .fr-fieldset__content::before {\n    box-shadow: inset 2px 0 0 0 #0063cb;\n  }\n}","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media screen and (min-width: 0\\0) and (min-resolution: +72dpi) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Form legacy\n/// @group form\n////\n\n@use 'src/module/legacy';\n\n@include legacy.is(ie11) {\n  #{ns(fieldset)} {\n    &__legend {\n      max-width: 100%;\n    }\n  }\n\n  #{ns(message)} {\n    &--error {\n      @include icon-legacy(error-fill, sm);\n    }\n\n    &--valid {\n      @include icon-legacy(success-fill, sm);\n    }\n\n    &--info {\n      @include icon-legacy(info-fill, sm);\n    }\n\n    &--warning {\n      @include icon-legacy(warning-fill, sm);\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'src/module/legacy';\n@use 'src/module/media-query';\n@use 'src/module/spacing';\n@use 'src/module/specificity';\n@use 'src/module/string';\n@use 'src/module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy == true {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@use '../../../../../module/spacing';\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{spacing.space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{spacing.space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{spacing.space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{spacing.space($max-height)};\n    }\n  }\n}\n","////\n/// form Scheme\n/// @group form\n////\n\n@use 'src/module/color';\n@use 'src/module/disabled';\n\n@mixin _form-scheme($legacy: false) {\n  #{ns-group(select), ns-group(input), ns-group(range), ns-group(upload)} {\n    &--valid {\n      label {\n        @include color.text(default success, (legacy:$legacy));\n      }\n    }\n\n    &--error {\n      label {\n        @include color.text(default error, (legacy:$legacy));\n      }\n    }\n\n    &--info {\n      label {\n        @include color.text(default info, (legacy:$legacy));\n      }\n    }\n\n    &--disabled {\n      label,\n      #{ns(hint-text)} {\n        @include disabled.colors((legacy: $legacy, text: true));\n      }\n    }\n  }\n\n  #{ns(label)} {\n    @include color.text(label grey, (legacy:$legacy));\n\n    &--error {\n      @include color.text(default error, (legacy:$legacy));\n    }\n\n    &--success {\n      @include color.text(default success, (legacy:$legacy));\n    }\n\n    &--info {\n      @include color.text(default info, (legacy:$legacy));\n    }\n\n    &--disabled {\n      &,\n      & #{ns(hint-text)} {\n        @include disabled.colors((legacy: $legacy, text: true));\n      }\n    }\n  }\n\n  #{ns(hint-text)},\n  #{ns(message)} {\n    @include color.text(mention grey, (legacy:$legacy));\n  }\n\n  #{ns(message)} {\n    &--error {\n      @include color.text(default error, (legacy:$legacy));\n    }\n\n    &--valid {\n      @include color.text(default success, (legacy:$legacy));\n    }\n\n    &--info {\n      @include color.text(default info, (legacy:$legacy));\n    }\n\n    &--warning {\n      @include color.text(default warning, (legacy:$legacy));\n    }\n  }\n\n  #{ns(fieldset)} {\n    @include disabled.selector {\n      #{ns(label)},\n      #{ns(hint-text)},\n      #{ns(fieldset__legend)} {\n        @include disabled.colors((legacy: $legacy, text: true));\n      }\n    }\n\n    input {\n      @include disabled.selector {\n        + label,\n        + label #{ns(hint-text)},\n        + label + #{ns(hint-text)} {\n          @include disabled.colors((legacy: $legacy, text: true));\n        }\n      }\n    }\n\n    &__legend {\n      @include color.text(label grey, (legacy:$legacy));\n    }\n\n    &--error,\n    &--error &__legend {\n      @include color.background-image(border plain error, (legacy:$legacy));\n    }\n\n    &--error &__legend,\n    &--error #{ns(label)} {\n      @include color.text(default error, (legacy:$legacy));\n    }\n\n    &--valid,\n    &--valid &__legend {\n      @include color.background-image(border plain success, (legacy:$legacy));\n    }\n\n    &--valid &__legend,\n    &--valid #{ns(label)} {\n      @include color.text(default success, (legacy:$legacy));\n    }\n\n    &--info,\n    &--info &__legend {\n      @include color.background-image(border plain info, (legacy:$legacy));\n    }\n\n    &--info &__legend,\n    &--info #{ns(label)} {\n      @include color.text(default info, (legacy:$legacy));\n    }\n  }\n}\n","////\n/// form Scheme\n/// @group form\n////\n\n@use 'src/module/color';\n@use 'src/module/disabled';\n\n@mixin _deprecated-form-scheme($legacy: false) {\n  #{ns(error-text)} {\n    @include color.text(default error, (legacy:$legacy));\n  }\n\n  #{ns(valid-text)} {\n    @include color.text(default success, (legacy:$legacy));\n  }\n\n  #{ns(info-text)} {\n    @include color.text(default info, (legacy:$legacy));\n  }\n\n  #{ns(fieldset)} {\n    &--valid {\n      #{ns(fieldset__content)} {\n        @include before {\n          @include color.box-shadow(plain success, (legacy:$legacy), left-2-in);\n        }\n      }\n    }\n\n    &--error {\n      #{ns(fieldset__content)} {\n        @include before {\n          @include color.box-shadow(plain error, (legacy:$legacy), left-2-in);\n        }\n      }\n    }\n\n    &--info {\n      #{ns(fieldset__content)} {\n        @include before {\n          @include color.box-shadow(plain info, (legacy:$legacy), left-2-in);\n        }\n      }\n    }\n  }\n}\n"]}