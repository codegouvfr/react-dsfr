{"version":3,"sources":["<no source>","%3Cinput%20css%20FxCsjp%3E","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/share/main.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/share/style/_module.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/display/tool/_display.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/typography/tool/_styles.scss","file:///Users/ket/Documents/work/dsfr/src/module/color/mixin/_element.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/spacing/tool/_size.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/button/style/tool/_group.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/spacing/tool/_space.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/selector/tool/_pattern.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/link/style/tool/_size.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/link/style/tool/_icon.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/selector/tool/_pseudo.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/icon/tool/_default.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/display/tool/_mask-image.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/share/deprecated/style/_module.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/typography/tool/_list.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/action/tool/_link.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/core/style/action/tool/_hover.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/share/deprecated/style/_tool.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/share/style/_scheme.scss","file:///Users/ket/Documents/work/dsfr/src/module/disabled/mixin/_selector.scss","file:///Users/ket/Documents/work/dsfr/src/module/media-query/mixin/_respond-from.scss","file:///Users/ket/Documents/work/dsfr/src/module/shame/media-query/mixin/_order.scss","file:///Users/ket/Documents/work/dsfr/src/module/preference/mixin/_forced-colors.scss","file:///Users/ket/Documents/work/dsfr/src/dsfr/component/link/style/tool/_nest.scss"],"names":[],"mappings":"AAAA;;GAAA;ACAA,gBAAgB;;ACKhB;;cAAA;ACGA;ECGI,aAAA;EAIA,sBAAA;;EC0FA,wBAAA;EAAA,yBAAA;AJpFJ;;AERE;EEaA,eAAA;EAGE,mBAAA;EFdA,QAAA;AFWJ;;AERE;EEQA,kBAAA;EAGE,oBAAA;EFRA,QAAA;EGoBA,+BAAA;ALVJ;;AEPE;EIdI,WAAA;EJiBF,QAAA;AFaJ;;AOlCE;EACE,WAAA;EACA,eAAA;ECaE,mBAHA;EAIA,oBAJA;ENYA,2BAAA;AFgBN;;AOlCE;EACE,oBAAA;EACA,eAAA;EACA,WAAA;APoCJ;;ASvCa;ECAX,eAAA;EACA,mBAFc;EAMZ,kBAFW;EAkBb,oBAAA;ECSE,gBAAA;EACA,mBAAA;EACA,iBALa;EAMb,kBANa;EAOb,oBANY;EAOZ,qBAPY;AX+BhB;;AYvDE;EDmCI,cAAA;EACA,oBAZU;EEkBZ,cAAA;EACA,qBAAA;EACA,uDAAA;EACA,8BAAA;EPHE,uBAAA;EAGA,wBAAA;EQlDJ,4BDoD2B;ECnD3B,oBDmD2B;EApBzB,mBAAA;EDxBE,WCsD+B;AbGrC;;AY5DE;EEVA,4DD2CM;EC1CN,oDD0CM;AbkER;;AYnGE;EEVA,oED2CM;EC1CN,4DD0CM;AbuER;;AYxGE;EEVA,iED2CM;EC1CN,yDD0CM;Ab4ER;;AY7GE;EEVA,6DD2CM;EC1CN,qDD0CM;AbiFR;;AYlHE;EEVA,4DD2CM;EC1CN,oDD0CM;AbsFR;;AYvHE;EEVA,4DD2CM;EC1CN,oDD0CM;Ab2FR;;AY5HE;EEVA,8DD2CM;EC1CN,sDD0CM;AbgGR;;AYjIE;EEVA,6DD2CM;EC1CN,qDD0CM;AbqGR;;AYtIE;EEVA,8DD2CM;EC1CN,sDD0CM;Ab0GR;;AerJE;ECmBA,eAAA;EACA,eAAA;EACA,aAAA;EACA,aAAA;EACA,aAAA;EACA,cAAA;EACA,kBAAA;ERVI,oBAHA;EAIA,qBAJA;EFRA,WAAA;ESCF,QAAA;EACA,aAAA;Af8JJ;;AOpKE;EACE,WAAA;EACA,eAAA;ECaE,mBAHA;EAIA,oBAJA;AR8JN;;AOpKE;EACE,oBAAA;EACA,eAAA;EACA,WAAA;APsKJ;;AetKE;EEkBA,qBAAA;ECwBE,0BAAA;EHvCA,oBAAA;EPGE,mBAHA;EAIA,oBAJA;EAWA,mBAXA;EHoHF,6BAAA;;EAEE,gBAAA;EACA,iBAAA;EAhGF,0CAAA;EAAA,sDAAA;ALoJJ;;AmBrLE;ETIA,eAAA;EACA,mBAFc;EAMZ,kBAFW;EAkBb,oBAAA;ECSE,gBAAA;EACA,mBAAA;EACA,iBALa;EAMb,kBANa;EAOb,oBANY;EAOZ,qBAPY;AXkKhB;;AY1LE;EDkCI,mBAAA;EACA,cAAA;EACA,oBAZU;EEkBZ,cAAA;EACA,qBAAA;EACA,uDAAA;EACA,8BAAA;EPHE,uBAAA;EAGA,wBAAA;EQlDJ,4BDoD2B;ECnD3B,oBDmD2B;ECzD3B,oED2CM;EC1CN,4DD0CM;ED9BF,WCsD+B;AbsIrC;;AmBvME;ETIA,eAAA;EACA,mBAFc;EAMZ,kBAFW;EAkBb,oBAAA;ECSE,gBAAA;EACA,mBAAA;EACA,iBALa;EAMb,kBANa;EAOb,oBANY;EAOZ,qBAPY;AXwNhB;;AYhPE;EDkCI,mBAAA;EACA,cAAA;EACA,oBAZU;EEkBZ,cAAA;EACA,qBAAA;EACA,uDAAA;EACA,8BAAA;EPHE,uBAAA;EAGA,wBAAA;EQlDJ,4BDoD2B;ECnD3B,oBDmD2B;ECzD3B,4DD2CM;EC1CN,oDD0CM;ED9BF,WCsD+B;Ab4LrC;;AmB7PE;ETIA,eAAA;EACA,mBAFc;EAMZ,kBAFW;EAkBb,oBAAA;ECSE,gBAAA;EACA,mBAAA;EACA,iBALa;EAMb,kBANa;EAOb,oBANY;EAOZ,qBAPY;AX8QhB;;AYtSE;EDkCI,mBAAA;EACA,cAAA;EACA,oBAZU;EEkBZ,cAAA;EACA,qBAAA;EACA,uDAAA;EACA,8BAAA;EPHE,uBAAA;EAGA,wBAAA;EQlDJ,4BDoD2B;ECnD3B,oBDmD2B;ECzD3B,iED2CM;EC1CN,yDD0CM;ED9BF,WCsD+B;AbkPrC;;AmBnTE;ETIA,eAAA;EACA,mBAFc;EAMZ,kBAFW;EAkBb,oBAAA;ECSE,gBAAA;EACA,mBAAA;EACA,iBALa;EAMb,kBANa;EAOb,oBANY;EAOZ,qBAPY;AXoUhB;;AY5VE;EDkCI,mBAAA;EACA,cAAA;EACA,oBAZU;EEkBZ,cAAA;EACA,qBAAA;EACA,uDAAA;EACA,8BAAA;EPHE,uBAAA;EAGA,wBAAA;EQlDJ,4BDoD2B;ECnD3B,oBDmD2B;ECzD3B,6DD2CM;EC1CN,qDD0CM;ED9BF,WCsD+B;AbwSrC;;AmBzWE;ETIA,eAAA;EACA,mBAFc;EAMZ,kBAFW;EAkBb,oBAAA;ECSE,gBAAA;EACA,mBAAA;EACA,iBALa;EAMb,kBANa;EAOb,oBANY;EAOZ,qBAPY;AX0XhB;;AYlZE;EDkCI,mBAAA;EACA,cAAA;EACA,oBAZU;EEkBZ,cAAA;EACA,qBAAA;EACA,uDAAA;EACA,8BAAA;EPHE,uBAAA;EAGA,wBAAA;EQlDJ,4BDoD2B;ECnD3B,oBDmD2B;ECzD3B,8DD2CM;EC1CN,sDD0CM;ED9BF,WCsD+B;Ab8VrC;;AoB9ZI;Ef6HA,6BAAA;;EAEE,gBAAA;EACA,iBAAA;EAhGF,0CAAA;EAAA,sDAAA;AL0aJ;;AqBhcW;;EhBsBP,gCAAA;EAAA,uDAAA;EA6FA,6BAAA;;EAEE,gBAAA;EACA,iBAAA;ALiVN;;AqBvcW;;EhBsBP,gCAAA;EAAA,uDAAA;EA6FA,6BAAA;;EAEE,gBAAA;EACA,iBAAA;ALoWN;AsB9dI;ECRI,cAAA;AvBDR;AsBSI;ECRI,cAAA;ErBWN;IIQI,gBAAA;ENSJ;AA1BF;AsBMI;ECRI,cAAA;AvBKR;AsBGI;ECRI,cAAA;AvBQR;AwBNE;EtBoBE;IAII,YAAA;EFyBN;;EY1CA;ICyFM,yBAAA;IAEF,4BXjE+B;EFuDnC;;EYjFA;;IC2FI,0BX5DiC;EFwDrC;;EYvFA;IC2FI,0BXrD+B;EFuDnC;;EY7FA;ICyFM,yBAAA;IAEF,4BY/FW;EzByNf;;EYrNA;ICyFM,yBAAA;IAEF,0BMhG2B;EnBgO/B;;EY3NA;ICyFM,yBAAA;IAEF,0BM7F2B;EnBoO/B;;EYlOA;ICyFM,yBAAA;IAEF,4BY/FW;EzB+Qf;;EY3QA;ICyFM,yBAAA;IAEF,0BMhG2B;EnBsR/B;;EYjRA;ICyFM,yBAAA;IAEF,0BM7F2B;EnB0R/B;;EYxRA;ICyFM,yBAAA;IAEF,4BY/FW;EzBqUf;;EYjUA;ICyFM,yBAAA;IAEF,0BMhG2B;EnB4U/B;;EYvUA;ICyFM,yBAAA;IAEF,0BM7F2B;EnBgV/B;;EY9UA;ICyFM,yBAAA;IAEF,4BY/FW;EzB2Xf;;EYvXA;ICyFM,yBAAA;IAEF,0BMhG2B;EnBkY/B;;EY7XA;ICyFM,yBAAA;IAEF,0BM7F2B;EnBsY/B;;EYpYA;ICyFM,yBAAA;IAEF,4BY/FW;EzBibf;;EY7aA;ICyFM,yBAAA;IAEF,0BMhG2B;EnBwb/B;;EYnbA;ICyFM,yBAAA;IAEF,0BM7F2B;EnB4b/B;AA/YF","file":"share.main.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  SHARE\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n.fr-share {\n  display: flex;\n  flex-direction: column;\n  --text-spacing: 0 0 1rem;\n  --title-spacing: 0 0 1rem;\n}\n.fr-share__title {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  order: 1;\n}\n.fr-share__text {\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  order: 3;\n}\n@media (min-width: 48em) {\n  .fr-share__text {\n    max-width: 18rem;\n  }\n}\n.fr-share .fr-btns-group {\n  width: auto;\n  order: 2;\n}\n.fr-share .fr-btns-group .fr-btn {\n  width: auto;\n  max-width: 100%;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n.fr-share .fr-btns-group > li {\n  display: inline-flex;\n  max-width: 100%;\n  width: auto;\n}\n.fr-share .fr-btns-group .fr-btn {\n  justify-content: flex-start;\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share .fr-btns-group .fr-btn {\n    border: none;\n  }\n}\n.fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"]) {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1rem;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n  --icon-size: 1.5rem;\n  margin-left: 0;\n  margin-right: 0.5rem;\n}\n.fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n  --icon-size: 1.5rem;\n}\n.fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n  content: \"\";\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n    forced-color-adjust: none;\n    background-color: buttontext;\n  }\n}\n\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) .fr-btn:disabled:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before, .fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) a.fr-btn:not([href]):not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n    background-color: graytext;\n  }\n}\n\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share .fr-btns-group:not(.fr-btns-group--sm):not(.fr-btns-group--lg) a[href].fr-btn:not([class^=fr-icon-]):not([class*=\" fr-icon-\"]):not([class^=fr-fi-]):not([class*=\" fr-fi-\"])::before {\n    background-color: linktext;\n  }\n}\n\n.fr-btn--bluesky::before {\n  -webkit-mask-image: url(\"../../icons/logo/bluesky-line.svg\");\n  mask-image: url(\"../../icons/logo/bluesky-line.svg\");\n}\n\n.fr-btn--facebook::before {\n  -webkit-mask-image: url(\"../../icons/logo/facebook-circle-line.svg\");\n  mask-image: url(\"../../icons/logo/facebook-circle-line.svg\");\n}\n\n.fr-btn--linkedin::before {\n  -webkit-mask-image: url(\"../../icons/logo/linkedin-box-line.svg\");\n  mask-image: url(\"../../icons/logo/linkedin-box-line.svg\");\n}\n\n.fr-btn--mastodon::before {\n  -webkit-mask-image: url(\"../../icons/logo/mastodon-line.svg\");\n  mask-image: url(\"../../icons/logo/mastodon-line.svg\");\n}\n\n.fr-btn--threads::before {\n  -webkit-mask-image: url(\"../../icons/logo/threads-line.svg\");\n  mask-image: url(\"../../icons/logo/threads-line.svg\");\n}\n\n.fr-btn--twitter::before {\n  -webkit-mask-image: url(\"../../icons/logo/twitter-line.svg\");\n  mask-image: url(\"../../icons/logo/twitter-line.svg\");\n}\n\n.fr-btn--twitter-x::before {\n  -webkit-mask-image: url(\"../../icons/logo/twitter-x-line.svg\");\n  mask-image: url(\"../../icons/logo/twitter-x-line.svg\");\n}\n\n.fr-btn--mail::before {\n  -webkit-mask-image: url(\"../../icons/business/mail-line.svg\");\n  mask-image: url(\"../../icons/business/mail-line.svg\");\n}\n\n.fr-btn--copy::before {\n  -webkit-mask-image: url(\"../../icons/business/links-fill.svg\");\n  mask-image: url(\"../../icons/business/links-fill.svg\");\n}\n\n.fr-share__group {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n  margin-left: -0.5rem;\n  margin-right: -0.5rem;\n  width: auto;\n  order: 2;\n  display: flex;\n}\n.fr-share__group .fr-btn {\n  width: auto;\n  max-width: 100%;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n.fr-share__group > li {\n  display: inline-flex;\n  max-width: 100%;\n  width: auto;\n}\n.fr-share__link {\n  --underline-img: none;\n  --hover-tint: var(--hover);\n  display: inline-flex;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.fr-share__link--facebook {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1rem;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.fr-share__link--facebook::before {\n  --icon-size: 1.5rem;\n  margin-left: 0;\n  margin-right: 0.5rem;\n}\n.fr-share__link--facebook::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-share__link--facebook::before {\n  -webkit-mask-image: url(\"../../icons/logo/facebook-circle-line.svg\");\n  mask-image: url(\"../../icons/logo/facebook-circle-line.svg\");\n}\n.fr-share__link--facebook::before {\n  content: \"\";\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share__link--facebook::before {\n    forced-color-adjust: none;\n    background-color: buttontext;\n  }\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a[href].fr-share__link--facebook::before {\n    forced-color-adjust: none;\n    background-color: linktext;\n  }\n}\n\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a:not([href]).fr-share__link--facebook::before {\n    forced-color-adjust: none;\n    background-color: graytext;\n  }\n}\n\n.fr-share__link--twitter {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1rem;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.fr-share__link--twitter::before {\n  --icon-size: 1.5rem;\n  margin-left: 0;\n  margin-right: 0.5rem;\n}\n.fr-share__link--twitter::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-share__link--twitter::before {\n  -webkit-mask-image: url(\"../../icons/logo/twitter-line.svg\");\n  mask-image: url(\"../../icons/logo/twitter-line.svg\");\n}\n.fr-share__link--twitter::before {\n  content: \"\";\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share__link--twitter::before {\n    forced-color-adjust: none;\n    background-color: buttontext;\n  }\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a[href].fr-share__link--twitter::before {\n    forced-color-adjust: none;\n    background-color: linktext;\n  }\n}\n\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a:not([href]).fr-share__link--twitter::before {\n    forced-color-adjust: none;\n    background-color: graytext;\n  }\n}\n\n.fr-share__link--linkedin {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1rem;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.fr-share__link--linkedin::before {\n  --icon-size: 1.5rem;\n  margin-left: 0;\n  margin-right: 0.5rem;\n}\n.fr-share__link--linkedin::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-share__link--linkedin::before {\n  -webkit-mask-image: url(\"../../icons/logo/linkedin-box-line.svg\");\n  mask-image: url(\"../../icons/logo/linkedin-box-line.svg\");\n}\n.fr-share__link--linkedin::before {\n  content: \"\";\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share__link--linkedin::before {\n    forced-color-adjust: none;\n    background-color: buttontext;\n  }\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a[href].fr-share__link--linkedin::before {\n    forced-color-adjust: none;\n    background-color: linktext;\n  }\n}\n\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a:not([href]).fr-share__link--linkedin::before {\n    forced-color-adjust: none;\n    background-color: graytext;\n  }\n}\n\n.fr-share__link--mail {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1rem;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.fr-share__link--mail::before {\n  --icon-size: 1.5rem;\n  margin-left: 0;\n  margin-right: 0.5rem;\n}\n.fr-share__link--mail::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-share__link--mail::before {\n  -webkit-mask-image: url(\"../../icons/business/mail-line.svg\");\n  mask-image: url(\"../../icons/business/mail-line.svg\");\n}\n.fr-share__link--mail::before {\n  content: \"\";\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share__link--mail::before {\n    forced-color-adjust: none;\n    background-color: buttontext;\n  }\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a[href].fr-share__link--mail::before {\n    forced-color-adjust: none;\n    background-color: linktext;\n  }\n}\n\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a:not([href]).fr-share__link--mail::before {\n    forced-color-adjust: none;\n    background-color: graytext;\n  }\n}\n\n.fr-share__link--copy {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2.5rem;\n  padding: 0.5rem 1rem;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2.5rem;\n  max-height: 2.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.fr-share__link--copy::before {\n  --icon-size: 1.5rem;\n  margin-left: 0;\n  margin-right: 0.5rem;\n}\n.fr-share__link--copy::before {\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n.fr-share__link--copy::before {\n  -webkit-mask-image: url(\"../../icons/business/links-fill.svg\");\n  mask-image: url(\"../../icons/business/links-fill.svg\");\n}\n.fr-share__link--copy::before {\n  content: \"\";\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  .fr-share__link--copy::before {\n    forced-color-adjust: none;\n    background-color: buttontext;\n  }\n}\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a[href].fr-share__link--copy::before {\n    forced-color-adjust: none;\n    background-color: linktext;\n  }\n}\n\n@media (-ms-high-contrast: active), (forced-colors: active) {\n  a:not([href]).fr-share__link--copy::before {\n    forced-color-adjust: none;\n    background-color: graytext;\n  }\n}\n\n.fr-share .fr-btn {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n  box-shadow: inset 0 0 0 1px var(--border-default-grey);\n}\n.fr-share .fr-btn:disabled, .fr-share a.fr-btn:not([href]) {\n  color: var(--text-disabled-grey);\n  box-shadow: inset 0 0 0 1px var(--border-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}\n\n.fr-share__text {\n  color: var(--text-mention-grey);\n}\n\n.fr-share__link {\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n  color: var(--text-action-high-blue-france);\n  box-shadow: inset 0 0 0 1px var(--border-default-grey);\n}\n.fr-share__link:disabled, a.fr-share__link:not([href]) {\n  color: var(--text-disabled-grey);\n  box-shadow: inset 0 0 0 1px var(--border-disabled-grey);\n  background-color: transparent;\n  --hover: inherit;\n  --active: inherit;\n}","////\n/// Share Main\n/// @group share\n////\n\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  SHARE\n\\* ˍˍˍˍˍˍˍˍˍ */\n\n@use 'src/module/path';\n@use 'src/module/shame/media-query';\n\n@include path.to-dist(2);\n@include media-query.order;\n\n@import 'index';\n@import 'style/module';\n@import 'style/scheme';\n\n// deprecated\n@import 'deprecated/style/tool';\n@import 'deprecated/style/module';\n@import 'deprecated/style/scheme';\n\n@include _share-scheme;\n\n// deprecated\n@include _share-deprecated-scheme;\n","////\n/// Share Module\n/// @group share\n////\n\n@use 'src/module/disabled';\n@use 'src/module/preference';\n\n#{ns(share)} {\n  @include display-flex(column);\n  @include set-text-margin(0 0 4v);\n  @include set-title-margin(0 0 4v);\n\n  &__title {\n    @include text-style(md);\n    order: 1;\n  }\n\n  &__text {\n    @include text-style(xs);\n    @include max-width(72v, md);\n    order: 3;\n  }\n\n  #{ns-group(btns)} {\n    @include horizontal-btns-group;\n    @include width(auto);\n    order: 2;\n\n    #{ns(btn)} {\n      justify-content: flex-start;\n\n      @include preference.forced-colors {\n        border: none;\n      }\n    }\n\n    &:not(#{ns-group(btns)}--sm):not(#{ns-group(btns)}--lg) {\n      #{ns(btn)} {\n        @include has-not-icon {\n          @include nest-btn(md, only, null, null, false);\n          @include icon(null, md, before);\n          @include icon-forced-color(buttontext, true, before);\n        }\n\n        @include disabled.selector((can-be-link: true)) {\n          @include has-not-icon {\n            @include icon-forced-color(graytext, null, before);\n          }\n        }\n      }\n\n      a[href]#{ns(btn)} {\n        @include has-not-icon {\n          @include icon-forced-color(linktext, null, before);\n        }\n      }\n    }\n  }\n}\n\n@include build-share-social-icons();\n@include build-share-icon(mail, mail-line);\n@include build-share-icon(copy, links-fill);\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@use 'src/module/spacing';\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} spacing.space($font-size) #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} spacing.space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'src/module/legacy';\n@use 'src/module/media-query';\n@use 'src/module/spacing';\n@use 'src/module/specificity';\n@use 'src/module/string';\n@use 'src/module/utilities';\n@use '../variable/constant';\n@use '../function/box-shadow' as bs;\n@use '../function/colors';\n@use '../function/result';\n@use '../function/token';\n\n$COLOR: constant.$value;\n\n@mixin element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $standalone: map.get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy == true {\n    $legacy-target: ie11;\n  }\n\n  $tokens: token.normalise($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: colors.from-list($tokens, $type, $options);\n  $result: result.get($colors, $value);\n  $result: specificity.important($result, $important);\n\n  @include legacy.is($legacy-target) {\n    #{$prop}: #{string.unstringify($result)};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and list.length($tokens) == 1) {\n\n    $token: nth($tokens, 1);\n    @if $legacy or $standalone {\n      @include _apply-pseudos($token, false, true, $legacy-target, $prop, $value, $important);\n    }\n    @else {\n      @if $prop == background-color {\n        --idle: transparent; // #{$result};\n        @include _apply-pseudos($token, true, false, null, $prop, $value, $important);\n      }\n      @else {\n        @include _apply-pseudos($token, true, true, null, $prop, $value, $important);\n      }\n    }\n  }\n}\n\n@mixin _apply-pseudos($token, $decision: true, $pseudo: false, $target: null, $prop: background-color, $value: constant.$value, $important: false) {\n  @include legacy.is($target) {\n    @include _apply-pseudo($token, hover, $decision, $pseudo, $prop, $value, $important);\n    @include _apply-pseudo($token, active, $decision, $pseudo, $prop, $value, $important);\n  }\n}\n\n@mixin _apply-pseudo($token, $type, $decision: true, $pseudo: false, $prop: background-color, $value: constant.$value, $important: false) {\n  $nest: null;\n  $p: --#{$type};\n  @if $pseudo {\n    $nest: '&:#{$type}';\n    $p: $prop;\n  }\n\n  $t: hex;\n  $options: (#{$type}: true);\n  @if $decision {\n    $t: decision;\n    $options: (var: true, #{$type}: true);\n  }\n\n  $color: colors.from($token, $t, $options);\n  $result: result.get($color, $value);\n  $result: specificity.important($result, $important);\n\n  @include utilities.nest($nest) {\n    #{$p}: #{string.unstringify($result)};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background($tokens, $options:()) {\n  @if not map.has-key($options, hover) {\n    $options: map.merge($options, (hover: inherit));\n  }\n  @include element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin transparent-background($options) {\n  $legacy: map.get($options, legacy);\n  $important: map.get($options, important);\n  $hover: map.get($options, hover);\n  $tokens: token.normalise(default grey, background);\n  $value: specificity.important(transparent, $important);\n\n  @if $legacy {\n    @include legacy.is(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin background-image($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: token.length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: string.unquote('$color##{$i}');\n      $transformed: list.append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text($tokens, $options) {\n  @include element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin text-fill($tokens, $options) {\n  @include element(-webkit-text-fill-color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin fill($tokens, $options) {\n  @include element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin border($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map.has-key($options, side) {\n    $prop:border-#{map.get($options, side)};\n  }\n  @include element($prop, border, $tokens, $options, $value);\n}\n\n@mixin no-border($options: ()) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        border: 0;\n      }\n    }\n    @else {\n      border: 0;\n    }\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin outline($tokens, $options, $value:1px solid $COLOR) {\n  @include element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin box-shadow($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: token.length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if bs.has($v) {\n      $transformed: append($transformed, bs.get($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include element(box-shadow, border, $tokens, $options, spacing.space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin no-box-shadow($options) {\n  $breakpoint: map.get($options, breakpoint);\n  $legacy: map.get($options, legacy);\n  @include media-query.respond-from($breakpoint) {\n    @if $legacy {\n      @include legacy.is(ie11) {\n        box-shadow: none;\n      }\n    }\n    @else {\n      box-shadow: none;\n    }\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@use '../../../../../module/spacing';\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{spacing.space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{spacing.space($width)};\n    }\n    @if $height != null {\n      height: #{spacing.space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{spacing.space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{spacing.space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{spacing.space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{spacing.space($max-height)};\n    }\n  }\n}\n","////\n/// Button Tool - group\n/// @group button\n////\n\n@mixin horizontal-btns-group() {\n  #{ns(btn)} {\n    width: auto;\n    max-width: 100%;\n    @include margin-x(2v);\n  }\n\n  > li {\n    display: inline-flex;\n    max-width: 100%;\n    width: auto;\n  }\n}\n\n@mixin vertical-btns-group() {\n  > li,\n  > div {\n    width: 100%;\n    max-width: 100%;\n  }\n\n  #{ns(btn)} {\n    @include size(calc(100% - 4v));\n    @include margin(0 2v 4v);\n    justify-content: center;\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n@use 'src/module/spacing';\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: spacing.space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Tool : Selector pattern\n/// @group core\n////\n\n@mixin _class-pattern($selector, $unify: true) {\n  @if & == null {\n    @at-root #{$selector} {\n      @content;\n    }\n  }\n  @else if $unify {\n    @at-root #{selector-unify(&, $selector)} {\n      @content;\n    }\n  }\n  @else {\n    #{$selector} {\n      @content;\n    }\n  }\n}\n\n@mixin class-contains($unify: true, $patterns...) {\n\n  @if length($patterns) == 1 and length(nth($patterns, 1)) > 1 {\n    $patterns: nth($patterns, 1);\n  }\n\n  $selectors: '';\n\n  @each $pattern in $patterns {\n    $selectors: '#{$selectors}[class*=\"#{$pattern}\"]';\n  }\n\n  @include _class-pattern($selectors, $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-contains($unify: true, $patterns...) {\n\n  @if length($patterns) == 1 and length(nth($patterns, 1)) > 1 {\n    $patterns: nth($patterns, 1);\n  }\n\n  $selectors: '';\n  @each $pattern in $patterns {\n    $selectors: '#{$selectors}:not([class*=\"#{$pattern}\"])';\n  }\n\n  @include _class-pattern($selectors, $unify) {\n    @content;\n  }\n}\n\n@mixin class-start-with($start, $unify: true) {\n  @include _class-pattern(class-start-with($start), $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-start-with($start, $unify: true) {\n  @include _class-pattern(class-not-start-with($start), $unify) {\n    @content;\n  }\n}\n\n@mixin class-end-with($end, $unify: true) {\n  @include _class-pattern(class-end-with($end), $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-end-with($end, $unify: true) {\n  @include _class-pattern(class-not-end-with($end), $unify) {\n    @content;\n  }\n}\n\n@mixin class-is-ns($unify: true) {\n  @include class-start-with(ns('', ''), $unify) {\n    @content;\n  }\n}\n\n@mixin class-is-not-ns($unify: true) {\n  @include class-not-start-with(ns('', ''), $unify) {\n    @content;\n  }\n}\n","////\n/// Link Tool : sizes\n/// @group link\n////\n\n@use \"sass:math\";\n@use 'src/module/spacing';\n\n@mixin _build-link-size($size-settings, $border-radius: false) {\n  $font-size: map_get($size-settings, font-size);\n  $style: get-text-style($font-size);\n  $line-height: spacing.space(map_get($style, line-height));\n  font-size: spacing.space($font-size);\n  line-height: $line-height;\n\n  $min-height: spacing.space(map_get($size-settings, min-height));\n  @if $min-height > 0 {\n    min-height: $min-height;\n  }\n\n  $max-icon-height: icon-size(md);\n\n  @if map_has_key($size-settings, icon-only) {\n    $max-icon-height: icon-size(map_get($size-settings, icon-only));\n  }\n  @else if map_has_key($size-settings, icon) {\n    $max-icon-height: icon-size(map_get($size-settings, icon));\n  }\n\n  $space-y: math.max($line-height, $max-icon-height);\n  $padding-x: spacing.space(map_get($size-settings, padding-x));\n  $padding-y: math.max(($min-height - $space-y) * 0.5, 0);\n\n  padding: #{$padding-y} #{$padding-x};\n\n  @if $border-radius {\n    border-radius: #{$min-height * 0.5};\n  }\n}\n\n@function _link-icon-margin($size) {\n  @return math.div(icon-size($size), 8);\n}\n\n@mixin _link-align-on-content($size, $place, $size-settings) {\n  $padding-x: spacing.space(map_get($size-settings, padding-x));\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n\n  @if $place == null {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n  @else if $place == left {\n    margin-left: -($padding-x - $icon-margin);\n    margin-right: -($padding-x);\n  }\n  @else if $place == right {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x - $icon-margin);\n  }\n  @else if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n    $min-height: spacing.space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) * 0.5;\n\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n}\n","////\n/// Link Tool : icons\n/// @group link\n////\n\n@use 'src/module/spacing';\n\n@mixin _build-link-icon($size-settings, $place, $size:md, $override-icon: true) {\n\n  $icon-size: icon-size(map_get($size-settings, icon));\n\n  @if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n  }\n\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n  $icon-margin-x: spacing.space(map_get($size-settings, icon-margin-x));\n\n  @if $place == left {\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n    @include before {\n      --icon-size: #{$icon-size};\n      margin-left: -($icon-margin);\n      margin-right: $icon-margin-x;\n    }\n  }\n  @else if $place == right {\n    overflow: initial;\n    max-width: 100%;\n    max-height: none;\n    @include icon-content(false, $override-icon) {\n      --icon-size: #{$icon-size};\n      margin-right: -($icon-margin);\n      margin-left: $icon-margin-x;\n    }\n  }\n  @else if $place == only {\n    $min-height: spacing.space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) * 0.5;\n\n    overflow: hidden;\n    white-space: nowrap;\n    max-width: $min-height;\n    max-height: $min-height;\n    padding-left: $padding-x;\n    padding-right: $padding-x;\n\n    @include before {\n      --icon-size: #{$icon-size};\n      margin-left: 0;\n      margin-right: $padding-x;\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Icon default\n/// @group core\n////\n\n@use 'src/module/path';\n@use 'src/module/spacing';\n@use 'src/module/specificity';\n@use 'src/module/preference';\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return spacing.space(map-get($icon-size-map, $size));\n}\n\n@function get-icon-url($icon, $important: false) {\n  $config: map-get($icons-config, $icon);\n  $url: url('#{path.dist()}#{map-get($config, path)}');\n  @return specificity.important($url, $important);\n}\n\n@function get-icon-pseudo($restrain) {\n  @if $restrain == before or $restrain == after {\n    @return $restrain;\n  }\n  @return before after;\n}\n\n@mixin _icon-pseudo ($restrain: null) {\n  @include _pseudo(get-icon-pseudo($restrain)) {\n    @content;\n  }\n}\n\n@mixin icon-size ($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    --icon-size: #{icon-size($size)};\n    @content;\n  }\n}\n\n@mixin icon-image ($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n\n  @include _icon-pseudo($restrain) {\n    @include mask-image($url);\n  }\n}\n\n@mixin icon-style($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    flex: 0 0 auto;\n    display: inline-block;\n    vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n    background-color: currentColor;\n    @include size(var(--icon-size), var(--icon-size));\n    @include mask-image-size(100% 100%);\n    @content;\n  }\n}\n\n@mixin icon-content($is-before: true, $override: false) {\n  $pseudos: before after;\n  @if not $is-before {\n    $pseudos: after before;\n  }\n  @include _pseudo(nth($pseudos, 1), '') {\n    @content;\n  }\n  @if $override {\n    @include _pseudo(nth($pseudos, 2), none);\n  }\n}\n\n@mixin icon($icon: null, $size: md, $restrain: null, $styling: true, $is-before: $restrain != after, $override: false) {\n  @if $styling {\n    @include icon-style($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size($size, $restrain);\n  }\n\n  @if $is-before != null {\n    @include icon-content($is-before, $override) {\n      @content;\n    }\n  }\n}\n\n@mixin icon-forced-color($color: graytext, $adjust: false, $restrain: before after) {\n  @include _pseudo($restrain) {\n    @include preference.forced-colors {\n      @if $adjust == true {\n        forced-color-adjust: none;\n      }\n      background-color: $color;\n    }\n  }\n}\n\n@function filter-icons($category, $config: $icons-config) {\n  $filtered: ();\n  @each $icon, $setting in $config {\n    @if map-get($setting, category) == $category {\n      $filtered: map-merge($filtered, (#{$icon}: $setting));\n    }\n  }\n  @return $filtered;\n}\n\n@mixin generate-icons($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image($icon);\n    }\n  }\n}\n","////\n/// Core Tool : mask-image\n/// @group core\n////\n\n@mixin mask-image($value) {\n  -webkit-mask-image: $value;\n  mask-image: $value;\n}\n\n@mixin mask-image-size($value) {\n  -webkit-mask-size: $value;\n  mask-size: $value;\n}\n\n@mixin mask-image-position($value) {\n  -webkit-mask-position: $value;\n  mask-position: $value;\n}\n\n@mixin mask-image-repeat($value) {\n  -webkit-mask-repeat: $value;\n  mask-repeat: $value;\n}\n","////\n/// Share Deprecated Module\n/// @group share\n////\n\n#{ns(share)} {\n  &__group {\n    @include disable-list-style;\n    @include horizontal-btns-group;\n    @include margin-x(-2v);\n    @include width(auto);\n    order: 2;\n    display: flex;\n  }\n\n  &__link {\n    @include disable-underline;\n    @include tint-enabled(true, null);\n    display: inline-flex;\n    @include margin-x(2v);\n    @include margin-bottom(4v);\n  }\n}\n\n@include build-share-link(facebook, facebook-circle-line);\n@include build-share-link(twitter, twitter-line);\n@include build-share-link(linkedin, linkedin-box-line);\n@include build-share-link(mail, mail-line);\n@include build-share-link(copy, links-fill);\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: disc;\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n\n@mixin enable-list-style-legacy($unify: false) {\n  $ul: ul;\n  $ol: ol;\n\n  @if $unify {\n    $ul: selector-associate('&', 'ul');\n    $ol: selector-associate('&', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: disc;\n    }\n\n    #{$ol} {\n      list-style-type: decimal;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(4v);\n      @include margin-y(2v);\n    }\n  }\n}\n\n@mixin disable-list-style-legacy($unify: false) {\n  $ul: '#{&} ul';\n  $ol: '#{&} ol';\n\n  @if $unify {\n    $ul: selector-associate('#{&}', 'ul');\n    $ol: selector-associate('#{&}', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: none;\n    }\n\n    #{$ol} {\n      list-style-type: none;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(0);\n      @include margin-y(0);\n    }\n  }\n}\n","////\n/// Core Tool : Reset\n/// @group core\n////\n\n$underline-thickness: 0.0625em;\n\n@mixin a-reset ($minimal: false) {\n  text-decoration: var(--text-decoration);\n  @if not $minimal {\n    color: inherit;\n  }\n}\n\n@mixin init-underline() {\n  --underline-max-width: 100%;\n  --underline-hover-width: 0;\n  --underline-idle-width: var(--underline-max-width);\n  --underline-x: calc(var(--underline-max-width) * 0);\n  --underline-thickness: #{$underline-thickness};\n}\n\n@mixin enable-underline() {\n  --underline-img: linear-gradient(0deg, currentColor, currentColor);\n}\n\n@mixin enable-underline-legacy() {\n  [href] {\n    text-decoration: underline;\n  }\n}\n\n@mixin disable-underline() {\n  --underline-img: none;\n}\n\n@mixin disable-underline-legacy() {\n  [href] {\n    text-decoration: none;\n  }\n}\n\n@mixin link-underline() {\n  background-image: var(--underline-img), var(--underline-img);\n  background-position: var(--underline-x) 100%, var(--underline-x) calc(100% - var(--underline-thickness));\n  background-repeat: no-repeat, no-repeat;\n  transition: background-size 0s;\n  background-size: var(--underline-hover-width) calc(var(--underline-thickness) * 2), var(--underline-idle-width) var(--underline-thickness);\n}\n\n@mixin link-underline-hover-only() {\n  --underline-idle-width: 0;\n}\n\n@mixin hover-underline () {\n  &:hover,\n  &:active {\n    --underline-hover-width: var(--underline-max-width);\n  }\n}\n\n@mixin external-link() {\n  @include icon-style(after);\n  @include icon-size(sm, after);\n  @include icon-image(external-link-line, after);\n  @include icon-forced-color(linktext, true, after);\n  @include after(var(--external-link-content)) {\n    @include margin-left(1v);\n  }\n}\n\n@mixin enable-external() {\n  --external-link-content: '';\n}\n\n@mixin disable-external() {\n  --external-link-content: none;\n}\n\n@mixin target-blank ($unify: false) {\n  @if $unify and & {\n    &[target=\"_blank\"] {\n      @content;\n    }\n  }\n  @else {\n    [target=\"_blank\"] {\n      @content;\n    }\n  }\n}\n","////\n/// Core Tool : Action Hover\n/// @group core\n////\n\n@mixin hover-media-query () {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin hover-type-selector($elements, $type: all, $check-disabled: false) {\n  $selectors: ();\n\n  @each $element, $setting in $elements {\n    $hover: map-get($setting, hover);\n    $selector: map-get($setting, selector);\n    @if $hover {\n      @if $type == map-get($hover, type) or $type == all {\n        $nested: $selector;\n        @if $check-disabled {\n          $nested: nest($selector, map-get($hover, selector));\n        }\n        $associated: $nested;\n        @if & != null and '#{&}' != ':root' {\n          $associated: selector-associate('#{&}', $nested);\n        }\n        $selectors: append($selectors, $associated, 'comma');\n      }\n    }\n  }\n\n  @at-root #{$selectors} {\n    @content;\n  }\n}\n\n@mixin hover-tint () {\n  &:hover {\n    background-color: var(--hover-tint);\n  }\n\n  &:active {\n    background-color: var(--active-tint);\n  }\n}\n\n@mixin enable-tint () {\n  @include tint-enabled(true, true);\n}\n\n@mixin disable-tint() {\n  @include tint-enabled(false, false);\n}\n\n@mixin tint-enabled ($hover: null, $active: null) {\n  @if $hover {\n    --hover-tint: var(--hover);\n  }\n  @else if $hover == false {\n    --hover-tint: var(--idle);\n  }\n\n  @if $active {\n    --active-tint: var(--active);\n  }\n  @else if $active == false {\n    --active-tint: var(--idle);\n  }\n}\n\n@mixin hover-brighten ($element, $img) {\n  @at-root #{$element} {\n    &:hover {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten});\n      }\n    }\n\n    &:active {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten * 2});\n      }\n    }\n  }\n}\n\n@mixin hover-brighten-filter () {\n  filter: brightness(var(--brightness));\n}\n","////\n/// Share Deprecated Tool\n/// @group share\n////\n\n@use 'src/module/selector';\n\n@mixin build-share-link($name, $icon) {\n  #{ns(share__link)}--#{$name} {\n    @include nest-btn(md, only, $icon, null, false);\n    @at-root a[href]#{&} {\n      @include icon-forced-color(linktext, true, before);\n    }\n    @at-root a:not([href])#{&} {\n      @include icon-forced-color(graytext, true, before);\n    }\n  }\n}\n\n@mixin build-share-links-legacy() {\n  @each $name, $icon in $share-icons {\n    #{ns(share__link)}--#{$name} {\n      @include icon-legacy($icon, md, before);\n    }\n  }\n}\n","////\n/// Share Scheme\n/// @group share\n////\n\n@use 'src/module/color';\n\n@mixin _share-scheme($legacy: false) {\n  #{ns(share)} {\n    #{ns(btn)} {\n      @include btn-kind-scheme(3, $legacy);\n    }\n\n    &__text {\n      @include color.text(mention grey, (legacy: $legacy));\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'colors';\n@use 'src/module/selector';\n\n/// Applique les couleurs disabled sur l'élément avec les sélecteurs appropriés\n/// @access public\n/// @param {map} map des options :\n///   - can-be-link {boolean}: ajoute le sélecteur de lien sans href.\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin selector($options: (), $colors: null) {\n  $selectors: '&:disabled';\n  @if map.get($options, can-be-link) {\n    $selectors: list.append($selectors, selector.associate(&, 'a:not([href])'), comma);\n  }\n\n  @at-root #{$selectors} {\n    @if $colors != null {\n      @include colors.colors($colors);\n    }\n    @content;\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'src/module/media-query/variable/breakpoints';\n@use 'src/module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","///  Mixin de contraste pour le windows high contrast mode\n///  @param {string} $active - active ou none\n/// @example scss -\n/// pour un contraste plus élevé\n/// @include forced-colors() {\n///   // your styles\n/// }\n\n@mixin forced-colors($active: active) {\n  @media (-ms-high-contrast: $active), (forced-colors: $active) {\n    @content;\n  }\n}\n","////\n/// Link Tool : link\n/// @group link\n////\n\n@mixin _nest-link($settings: $links-settings, $size: md, $place: null, $icon: null, $from: null, $insert: true, $align-on-content: false, $override-icon: true) {\n  $selector: null;\n  $sizes: map_get($settings, sizes);\n  $size-settings: map_get($sizes, $size);\n  $border-radius: map-get($settings, border-radius);\n  $places: map-get($links-settings, places);\n  $append: map-get($settings, append);\n  $forced-color: map_get($settings, forced-color);\n\n  @if $insert {\n    $selector: ns(map-get($settings, selector));\n\n    @if $append != null {\n      $selector: '#{$selector} #{$append}';\n    }\n  }\n\n  @include nest($selector) {\n    @include respond-from($from) {\n      @include _build-link-size($size-settings, $border-radius);\n\n      @if $icon != null {\n        $restrain: _get-link-restrain($places, $place);\n        $is-before: _get-link-is-before($places, $place);\n        $icon-size: _get-link-icon-size($size-settings, $places, $place);\n        @if $place != null {\n          @include _build-link-icon($size-settings, $place, $size, $override-icon);\n        }\n        @include icon-style($restrain);\n        @include icon-image($icon, $restrain);\n        @include icon-content($is-before, $override-icon and not $is-before);\n        @include icon-forced-color($forced-color, true, $restrain);\n      }\n      @else {\n        @if $place != null {\n          @include _build-link-icon($size-settings, $place, $size);\n        }\n        @else if $size != null {\n          $restrain: _get-link-restrain($places, $place);\n          $icon-size: _get-link-icon-size($size-settings, $places, $place);\n          @include icon-size($icon-size, $restrain);\n        }\n      }\n\n      @if map-get($settings, align-on-content) and $align-on-content {\n        @include _link-align-on-content($size, $place, $size-settings);\n      }\n\n      @content;\n    }\n  }\n}\n\n@mixin nest-link($size:md, $place: null, $icon:null, $from: null, $insert: true, $align-on-content: false) {\n  @include _nest-link($links-settings, $size, $place, $icon, $from, $insert, $align-on-content) {\n    @content;\n  }\n}\n"]}